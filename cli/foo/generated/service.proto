syntax = "proto3";
package service;

option go_package = "github.com/wundergraph/cosmo/plugin";

service FooService {
  rpc QueryUser(QueryUserRequest) returns (QueryUserResponse) {}
  rpc QueryUsersByRole(QueryUsersByRoleRequest) returns (QueryUsersByRoleResponse) {}
  rpc MutationCreateUser(MutationCreateUserRequest) returns (MutationCreateUserResponse) {}
  rpc MutationDeleteUser(MutationDeleteUserRequest) returns (MutationDeleteUserResponse) {}
  rpc MutationUpdateUserRole(MutationUpdateUserRoleRequest) returns (MutationUpdateUserRoleResponse) {}
}

message QueryUserRequest {
    string id = 1;
}
message QueryUserResponse {
    User user = 1;
}
message QueryUsersByRoleRequest {
    UserRole role = 1;
}
message QueryUsersByRoleResponse {
    repeated User users_by_role = 1;
}
message MutationCreateUserRequest {
    string name = 1;
    UserRole role = 2;
}
message MutationCreateUserResponse {
    User create_user = 1;
}
message MutationDeleteUserRequest {
    string id = 1;
}
message MutationDeleteUserResponse {
    User delete_user = 1;
}
message MutationUpdateUserRoleRequest {
    string id = 1;
    UserRole role = 2;
}
message MutationUpdateUserRoleResponse {
    User update_user_role = 1;
}

message User {
  string id = 1;
  string name = 2;
  UserRole role = 3;
}

enum UserRole {
  USER_ROLE_UNSPECIFIED = 0;
  USER_ROLE_ADMIN = 1;
  USER_ROLE_USER = 2;
  USER_ROLE_GUEST = 3;
}

message Mutation {
  User create_user = 1;
  User delete_user = 2;
  User update_user_role = 3;
}