{
  "version": "5",
  "dialect": "pg",
  "id": "9fd66749-c2c4-4726-af69-c0f2660a304e",
  "prevId": "695d6370-665b-4f35-87c7-92339032f5ca",
  "tables": {
    "api_keys": {
      "name": "api_keys",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "organization_id": {
          "name": "organization_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "key": {
          "name": "key",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "last_used_at": {
          "name": "last_used_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "apikey_name_idx": {
          "name": "apikey_name_idx",
          "columns": [
            "name",
            "organization_id"
          ],
          "isUnique": true
        }
      },
      "foreignKeys": {
        "api_keys_user_id_users_id_fk": {
          "name": "api_keys_user_id_users_id_fk",
          "tableFrom": "api_keys",
          "tableTo": "users",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "api_keys_organization_id_organizations_id_fk": {
          "name": "api_keys_organization_id_organizations_id_fk",
          "tableFrom": "api_keys",
          "tableTo": "organizations",
          "columnsFrom": [
            "organization_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "api_keys_key_unique": {
          "name": "api_keys_key_unique",
          "nullsNotDistinct": false,
          "columns": [
            "key"
          ]
        }
      }
    },
    "federated_graph_configs": {
      "name": "federated_graph_configs",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "federated_graph_id": {
          "name": "federated_graph_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "traffic_check_days": {
          "name": "traffic_check_days",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 7
        }
      },
      "indexes": {},
      "foreignKeys": {
        "federated_graph_configs_federated_graph_id_federated_graphs_id_fk": {
          "name": "federated_graph_configs_federated_graph_id_federated_graphs_id_fk",
          "tableFrom": "federated_graph_configs",
          "tableTo": "federated_graphs",
          "columnsFrom": [
            "federated_graph_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "federated_graphs": {
      "name": "federated_graphs",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "routing_url": {
          "name": "routing_url",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "target_id": {
          "name": "target_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "composed_schema_version_id": {
          "name": "composed_schema_version_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "federated_graphs_target_id_targets_id_fk": {
          "name": "federated_graphs_target_id_targets_id_fk",
          "tableFrom": "federated_graphs",
          "tableTo": "targets",
          "columnsFrom": [
            "target_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "federated_graphs_composed_schema_version_id_schema_versions_id_fk": {
          "name": "federated_graphs_composed_schema_version_id_schema_versions_id_fk",
          "tableFrom": "federated_graphs",
          "tableTo": "schema_versions",
          "columnsFrom": [
            "composed_schema_version_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "git_installations": {
      "name": "git_installations",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "slug": {
          "name": "slug",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "type": {
          "name": "type",
          "type": "git_installation_type",
          "primaryKey": false,
          "notNull": true
        },
        "provider_account_id": {
          "name": "provider_account_id",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true
        },
        "provider_installation_id": {
          "name": "provider_installation_id",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true
        },
        "provider_name": {
          "name": "provider_name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "oauth_token": {
          "name": "oauth_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "graph_api_tokens": {
      "name": "graph_api_tokens",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "organization_id": {
          "name": "organization_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "federated_graph_id": {
          "name": "federated_graph_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "token": {
          "name": "token",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "last_used_at": {
          "name": "last_used_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "graphApiToken_name_idx": {
          "name": "graphApiToken_name_idx",
          "columns": [
            "name",
            "federated_graph_id"
          ],
          "isUnique": true
        }
      },
      "foreignKeys": {
        "graph_api_tokens_organization_id_organizations_id_fk": {
          "name": "graph_api_tokens_organization_id_organizations_id_fk",
          "tableFrom": "graph_api_tokens",
          "tableTo": "organizations",
          "columnsFrom": [
            "organization_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "graph_api_tokens_federated_graph_id_federated_graphs_id_fk": {
          "name": "graph_api_tokens_federated_graph_id_federated_graphs_id_fk",
          "tableFrom": "graph_api_tokens",
          "tableTo": "federated_graphs",
          "columnsFrom": [
            "federated_graph_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "graph_api_tokens_token_unique": {
          "name": "graph_api_tokens_token_unique",
          "nullsNotDistinct": false,
          "columns": [
            "token"
          ]
        }
      }
    },
    "organization_integrations": {
      "name": "organization_integrations",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "organization_id": {
          "name": "organization_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "events": {
          "name": "events",
          "type": "text[]",
          "primaryKey": false,
          "notNull": false
        },
        "type": {
          "name": "type",
          "type": "integration_type",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "organization_integration_idx": {
          "name": "organization_integration_idx",
          "columns": [
            "organization_id",
            "name"
          ],
          "isUnique": true
        }
      },
      "foreignKeys": {
        "organization_integrations_organization_id_organizations_id_fk": {
          "name": "organization_integrations_organization_id_organizations_id_fk",
          "tableFrom": "organization_integrations",
          "tableTo": "organizations",
          "columnsFrom": [
            "organization_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "organization_member_roles": {
      "name": "organization_member_roles",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "organization_member_id": {
          "name": "organization_member_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "role": {
          "name": "role",
          "type": "member_role",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "organization_member_roles_organization_member_id_organization_members_id_fk": {
          "name": "organization_member_roles_organization_member_id_organization_members_id_fk",
          "tableFrom": "organization_member_roles",
          "tableTo": "organization_members",
          "columnsFrom": [
            "organization_member_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "organization_webhook_configs": {
      "name": "organization_webhook_configs",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "organization_id": {
          "name": "organization_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "endpoint": {
          "name": "endpoint",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "key": {
          "name": "key",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "events": {
          "name": "events",
          "type": "text[]",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "organization_webhook_configs_organization_id_organizations_id_fk": {
          "name": "organization_webhook_configs_organization_id_organizations_id_fk",
          "tableFrom": "organization_webhook_configs",
          "tableTo": "organizations",
          "columnsFrom": [
            "organization_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "organizations": {
      "name": "organizations",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "slug": {
          "name": "slug",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "invite_code": {
          "name": "invite_code",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "is_personal": {
          "name": "is_personal",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "is_free_trial": {
          "name": "is_free_trial",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "organizations_user_id_users_id_fk": {
          "name": "organizations_user_id_users_id_fk",
          "tableFrom": "organizations",
          "tableTo": "users",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "organizations_slug_unique": {
          "name": "organizations_slug_unique",
          "nullsNotDistinct": false,
          "columns": [
            "slug"
          ]
        }
      }
    },
    "organization_members": {
      "name": "organization_members",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "organization_id": {
          "name": "organization_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "accepted_invite": {
          "name": "accepted_invite",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "organization_member_idx": {
          "name": "organization_member_idx",
          "columns": [
            "id"
          ],
          "isUnique": true
        }
      },
      "foreignKeys": {
        "organization_members_user_id_users_id_fk": {
          "name": "organization_members_user_id_users_id_fk",
          "tableFrom": "organization_members",
          "tableTo": "users",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "organization_members_organization_id_organizations_id_fk": {
          "name": "organization_members_organization_id_organizations_id_fk",
          "tableFrom": "organization_members",
          "tableTo": "organizations",
          "columnsFrom": [
            "organization_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "schema_check_change_action": {
      "name": "schema_check_change_action",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "schema_check_id": {
          "name": "schema_check_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "change_type": {
          "name": "change_type",
          "type": "schema_change_type",
          "primaryKey": false,
          "notNull": false
        },
        "change_message": {
          "name": "change_message",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "is_breaking": {
          "name": "is_breaking",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "path": {
          "name": "path",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "schema_check_change_action_schema_check_id_schema_checks_id_fk": {
          "name": "schema_check_change_action_schema_check_id_schema_checks_id_fk",
          "tableFrom": "schema_check_change_action",
          "tableTo": "schema_checks",
          "columnsFrom": [
            "schema_check_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "schema_check_change_operation_usage": {
      "name": "schema_check_change_operation_usage",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "schema_check_change_action_id": {
          "name": "schema_check_change_action_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "hash": {
          "name": "hash",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "type": {
          "name": "type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "first_seen_at": {
          "name": "first_seen_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "last_seen_at": {
          "name": "last_seen_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "schema_check_change_operation_usage_schema_check_change_action_id_schema_check_change_action_id_fk": {
          "name": "schema_check_change_operation_usage_schema_check_change_action_id_schema_check_change_action_id_fk",
          "tableFrom": "schema_check_change_operation_usage",
          "tableTo": "schema_check_change_action",
          "columnsFrom": [
            "schema_check_change_action_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "schema_check_composition": {
      "name": "schema_check_composition",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "schema_check_id": {
          "name": "schema_check_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "target_id": {
          "name": "target_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "composition_errors": {
          "name": "composition_errors",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "composed_schema_sdl": {
          "name": "composed_schema_sdl",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "schema_check_composition_schema_check_id_schema_checks_id_fk": {
          "name": "schema_check_composition_schema_check_id_schema_checks_id_fk",
          "tableFrom": "schema_check_composition",
          "tableTo": "schema_checks",
          "columnsFrom": [
            "schema_check_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "schema_check_composition_target_id_targets_id_fk": {
          "name": "schema_check_composition_target_id_targets_id_fk",
          "tableFrom": "schema_check_composition",
          "tableTo": "targets",
          "columnsFrom": [
            "target_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "schema_check_federated_graphs": {
      "name": "schema_check_federated_graphs",
      "schema": "",
      "columns": {
        "check_id": {
          "name": "check_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "federated_graph_id": {
          "name": "federated_graph_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "traffic_check_days": {
          "name": "traffic_check_days",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "schema_check_federated_graphs_check_id_schema_checks_id_fk": {
          "name": "schema_check_federated_graphs_check_id_schema_checks_id_fk",
          "tableFrom": "schema_check_federated_graphs",
          "tableTo": "schema_checks",
          "columnsFrom": [
            "check_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "schema_check_federated_graphs_federated_graph_id_federated_graphs_id_fk": {
          "name": "schema_check_federated_graphs_federated_graph_id_federated_graphs_id_fk",
          "tableFrom": "schema_check_federated_graphs",
          "tableTo": "federated_graphs",
          "columnsFrom": [
            "federated_graph_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "schema_checks": {
      "name": "schema_checks",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "target_id": {
          "name": "target_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "is_composable": {
          "name": "is_composable",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "has_breaking_changes": {
          "name": "has_breaking_changes",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "has_client_traffic": {
          "name": "has_client_traffic",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "proposed_subgraph_schema_sdl": {
          "name": "proposed_subgraph_schema_sdl",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "gh_details": {
          "name": "gh_details",
          "type": "json",
          "primaryKey": false,
          "notNull": false
        },
        "forced_success": {
          "name": "forced_success",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "schema_checks_target_id_targets_id_fk": {
          "name": "schema_checks_target_id_targets_id_fk",
          "tableFrom": "schema_checks",
          "tableTo": "targets",
          "columnsFrom": [
            "target_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "schema_versions": {
      "name": "schema_versions",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "target_id": {
          "name": "target_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "schema_sdl": {
          "name": "schema_sdl",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "is_composable": {
          "name": "is_composable",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "composition_errors": {
          "name": "composition_errors",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "router_config": {
          "name": "router_config",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "schema_versions_target_id_targets_id_fk": {
          "name": "schema_versions_target_id_targets_id_fk",
          "tableFrom": "schema_versions",
          "tableTo": "targets",
          "columnsFrom": [
            "target_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "schema_version_change_action": {
      "name": "schema_version_change_action",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "schema_version_id": {
          "name": "schema_version_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "change_type": {
          "name": "change_type",
          "type": "schema_change_type",
          "primaryKey": false,
          "notNull": true
        },
        "change_message": {
          "name": "change_message",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "path": {
          "name": "path",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "schema_version_change_action_schema_version_id_schema_versions_id_fk": {
          "name": "schema_version_change_action_schema_version_id_schema_versions_id_fk",
          "tableFrom": "schema_version_change_action",
          "tableTo": "schema_versions",
          "columnsFrom": [
            "schema_version_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "sessions": {
      "name": "sessions",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "access_token": {
          "name": "access_token",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "refresh_token": {
          "name": "refresh_token",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "id_token": {
          "name": "id_token",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "sessions_user_id_users_id_fk": {
          "name": "sessions_user_id_users_id_fk",
          "tableFrom": "sessions",
          "tableTo": "users",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "sessions_user_id_unique": {
          "name": "sessions_user_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "user_id"
          ]
        }
      }
    },
    "slack_installations": {
      "name": "slack_installations",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "organization_id": {
          "name": "organization_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "slack_organization_id": {
          "name": "slack_organization_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "slack_organization_name": {
          "name": "slack_organization_name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "slack_channel_id": {
          "name": "slack_channel_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "slack_channel_name": {
          "name": "slack_channel_name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "slack_user_id": {
          "name": "slack_user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "access_token": {
          "name": "access_token",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "slack_installations_idx": {
          "name": "slack_installations_idx",
          "columns": [
            "organization_id",
            "slack_organization_id",
            "slack_channel_id"
          ],
          "isUnique": true
        }
      },
      "foreignKeys": {
        "slack_installations_organization_id_organizations_id_fk": {
          "name": "slack_installations_organization_id_organizations_id_fk",
          "tableFrom": "slack_installations",
          "tableTo": "organizations",
          "columnsFrom": [
            "organization_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "slack_integration_configs": {
      "name": "slack_integration_configs",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "integration_id": {
          "name": "integration_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "endpoint": {
          "name": "endpoint",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "slack_integration_configs_integration_id_organization_integrations_id_fk": {
          "name": "slack_integration_configs_integration_id_organization_integrations_id_fk",
          "tableFrom": "slack_integration_configs",
          "tableTo": "organization_integrations",
          "columnsFrom": [
            "integration_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "slack_schema_update_event_configs": {
      "name": "slack_schema_update_event_configs",
      "schema": "",
      "columns": {
        "slack_integration_config_id": {
          "name": "slack_integration_config_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "federated_graph_id": {
          "name": "federated_graph_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "slack_schema_update_event_configs_slack_integration_config_id_slack_integration_configs_id_fk": {
          "name": "slack_schema_update_event_configs_slack_integration_config_id_slack_integration_configs_id_fk",
          "tableFrom": "slack_schema_update_event_configs",
          "tableTo": "slack_integration_configs",
          "columnsFrom": [
            "slack_integration_config_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "slack_schema_update_event_configs_federated_graph_id_federated_graphs_id_fk": {
          "name": "slack_schema_update_event_configs_federated_graph_id_federated_graphs_id_fk",
          "tableFrom": "slack_schema_update_event_configs",
          "tableTo": "federated_graphs",
          "columnsFrom": [
            "federated_graph_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "subgraphs": {
      "name": "subgraphs",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "routing_url": {
          "name": "routing_url",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "subscription_url": {
          "name": "subscription_url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "subscription_protocol": {
          "name": "subscription_protocol",
          "type": "subscription_protocol",
          "primaryKey": false,
          "notNull": true,
          "default": "'ws'"
        },
        "schema_version_id": {
          "name": "schema_version_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "target_id": {
          "name": "target_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "subgraphs_schema_version_id_schema_versions_id_fk": {
          "name": "subgraphs_schema_version_id_schema_versions_id_fk",
          "tableFrom": "subgraphs",
          "tableTo": "schema_versions",
          "columnsFrom": [
            "schema_version_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "subgraphs_target_id_targets_id_fk": {
          "name": "subgraphs_target_id_targets_id_fk",
          "tableFrom": "subgraphs",
          "tableTo": "targets",
          "columnsFrom": [
            "target_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "federated_subgraphs": {
      "name": "federated_subgraphs",
      "schema": "",
      "columns": {
        "federated_graph_id": {
          "name": "federated_graph_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "subgraph_id": {
          "name": "subgraph_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "federated_subgraphs_federated_graph_id_federated_graphs_id_fk": {
          "name": "federated_subgraphs_federated_graph_id_federated_graphs_id_fk",
          "tableFrom": "federated_subgraphs",
          "tableTo": "federated_graphs",
          "columnsFrom": [
            "federated_graph_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "federated_subgraphs_subgraph_id_subgraphs_id_fk": {
          "name": "federated_subgraphs_subgraph_id_subgraphs_id_fk",
          "tableFrom": "federated_subgraphs",
          "tableTo": "subgraphs",
          "columnsFrom": [
            "subgraph_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "federated_subgraphs_federated_graph_id_subgraph_id": {
          "name": "federated_subgraphs_federated_graph_id_subgraph_id",
          "columns": [
            "federated_graph_id",
            "subgraph_id"
          ]
        }
      },
      "uniqueConstraints": {}
    },
    "target_label_matchers": {
      "name": "target_label_matchers",
      "schema": "",
      "columns": {
        "target_id": {
          "name": "target_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "label_matcher": {
          "name": "label_matcher",
          "type": "text[]",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "target_label_matchers_target_id_targets_id_fk": {
          "name": "target_label_matchers_target_id_targets_id_fk",
          "tableFrom": "target_label_matchers",
          "tableTo": "targets",
          "columnsFrom": [
            "target_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "targets": {
      "name": "targets",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "type": {
          "name": "type",
          "type": "target_type",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "labels": {
          "name": "labels",
          "type": "text[]",
          "primaryKey": false,
          "notNull": false
        },
        "organization_id": {
          "name": "organization_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "organization_name_idx": {
          "name": "organization_name_idx",
          "columns": [
            "organization_id",
            "name"
          ],
          "isUnique": true
        }
      },
      "foreignKeys": {
        "targets_organization_id_organizations_id_fk": {
          "name": "targets_organization_id_organizations_id_fk",
          "tableFrom": "targets",
          "tableTo": "organizations",
          "columnsFrom": [
            "organization_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "users": {
      "name": "users",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "users_email_unique": {
          "name": "users_email_unique",
          "nullsNotDistinct": false,
          "columns": [
            "email"
          ]
        }
      }
    },
    "webhook_graph_schema_update": {
      "name": "webhook_graph_schema_update",
      "schema": "",
      "columns": {
        "webhook_id": {
          "name": "webhook_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "federated_graph_id": {
          "name": "federated_graph_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "webhook_graph_schema_update_webhook_id_organization_webhook_configs_id_fk": {
          "name": "webhook_graph_schema_update_webhook_id_organization_webhook_configs_id_fk",
          "tableFrom": "webhook_graph_schema_update",
          "tableTo": "organization_webhook_configs",
          "columnsFrom": [
            "webhook_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "webhook_graph_schema_update_federated_graph_id_federated_graphs_id_fk": {
          "name": "webhook_graph_schema_update_federated_graph_id_federated_graphs_id_fk",
          "tableFrom": "webhook_graph_schema_update",
          "tableTo": "federated_graphs",
          "columnsFrom": [
            "federated_graph_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "webhook_graph_schema_update_webhook_id_federated_graph_id": {
          "name": "webhook_graph_schema_update_webhook_id_federated_graph_id",
          "columns": [
            "webhook_id",
            "federated_graph_id"
          ]
        }
      },
      "uniqueConstraints": {}
    }
  },
  "enums": {
    "git_installation_type": {
      "name": "git_installation_type",
      "values": {
        "PERSONAL": "PERSONAL",
        "ORGANIZATION": "ORGANIZATION"
      }
    },
    "integration_type": {
      "name": "integration_type",
      "values": {
        "slack": "slack"
      }
    },
    "member_role": {
      "name": "member_role",
      "values": {
        "admin": "admin",
        "member": "member"
      }
    },
    "schema_change_type": {
      "name": "schema_change_type",
      "values": {
        "FIELD_ARGUMENT_DESCRIPTION_CHANGED": "FIELD_ARGUMENT_DESCRIPTION_CHANGED",
        "FIELD_ARGUMENT_DEFAULT_CHANGED": "FIELD_ARGUMENT_DEFAULT_CHANGED",
        "FIELD_ARGUMENT_TYPE_CHANGED": "FIELD_ARGUMENT_TYPE_CHANGED",
        "DIRECTIVE_REMOVED": "DIRECTIVE_REMOVED",
        "DIRECTIVE_ADDED": "DIRECTIVE_ADDED",
        "DIRECTIVE_DESCRIPTION_CHANGED": "DIRECTIVE_DESCRIPTION_CHANGED",
        "DIRECTIVE_LOCATION_ADDED": "DIRECTIVE_LOCATION_ADDED",
        "DIRECTIVE_LOCATION_REMOVED": "DIRECTIVE_LOCATION_REMOVED",
        "DIRECTIVE_ARGUMENT_ADDED": "DIRECTIVE_ARGUMENT_ADDED",
        "DIRECTIVE_ARGUMENT_REMOVED": "DIRECTIVE_ARGUMENT_REMOVED",
        "DIRECTIVE_ARGUMENT_DESCRIPTION_CHANGED": "DIRECTIVE_ARGUMENT_DESCRIPTION_CHANGED",
        "DIRECTIVE_ARGUMENT_DEFAULT_VALUE_CHANGED": "DIRECTIVE_ARGUMENT_DEFAULT_VALUE_CHANGED",
        "DIRECTIVE_ARGUMENT_TYPE_CHANGED": "DIRECTIVE_ARGUMENT_TYPE_CHANGED",
        "ENUM_VALUE_REMOVED": "ENUM_VALUE_REMOVED",
        "ENUM_VALUE_ADDED": "ENUM_VALUE_ADDED",
        "ENUM_VALUE_DESCRIPTION_CHANGED": "ENUM_VALUE_DESCRIPTION_CHANGED",
        "ENUM_VALUE_DEPRECATION_REASON_CHANGED": "ENUM_VALUE_DEPRECATION_REASON_CHANGED",
        "ENUM_VALUE_DEPRECATION_REASON_ADDED": "ENUM_VALUE_DEPRECATION_REASON_ADDED",
        "ENUM_VALUE_DEPRECATION_REASON_REMOVED": "ENUM_VALUE_DEPRECATION_REASON_REMOVED",
        "FIELD_REMOVED": "FIELD_REMOVED",
        "FIELD_ADDED": "FIELD_ADDED",
        "FIELD_DESCRIPTION_CHANGED": "FIELD_DESCRIPTION_CHANGED",
        "FIELD_DESCRIPTION_ADDED": "FIELD_DESCRIPTION_ADDED",
        "FIELD_DESCRIPTION_REMOVED": "FIELD_DESCRIPTION_REMOVED",
        "FIELD_DEPRECATION_ADDED": "FIELD_DEPRECATION_ADDED",
        "FIELD_DEPRECATION_REMOVED": "FIELD_DEPRECATION_REMOVED",
        "FIELD_DEPRECATION_REASON_CHANGED": "FIELD_DEPRECATION_REASON_CHANGED",
        "FIELD_DEPRECATION_REASON_ADDED": "FIELD_DEPRECATION_REASON_ADDED",
        "FIELD_DEPRECATION_REASON_REMOVED": "FIELD_DEPRECATION_REASON_REMOVED",
        "FIELD_TYPE_CHANGED": "FIELD_TYPE_CHANGED",
        "FIELD_ARGUMENT_ADDED": "FIELD_ARGUMENT_ADDED",
        "FIELD_ARGUMENT_REMOVED": "FIELD_ARGUMENT_REMOVED",
        "INPUT_FIELD_REMOVED": "INPUT_FIELD_REMOVED",
        "INPUT_FIELD_ADDED": "INPUT_FIELD_ADDED",
        "INPUT_FIELD_DESCRIPTION_ADDED": "INPUT_FIELD_DESCRIPTION_ADDED",
        "INPUT_FIELD_DESCRIPTION_REMOVED": "INPUT_FIELD_DESCRIPTION_REMOVED",
        "INPUT_FIELD_DESCRIPTION_CHANGED": "INPUT_FIELD_DESCRIPTION_CHANGED",
        "INPUT_FIELD_DEFAULT_VALUE_CHANGED": "INPUT_FIELD_DEFAULT_VALUE_CHANGED",
        "INPUT_FIELD_TYPE_CHANGED": "INPUT_FIELD_TYPE_CHANGED",
        "OBJECT_TYPE_INTERFACE_ADDED": "OBJECT_TYPE_INTERFACE_ADDED",
        "OBJECT_TYPE_INTERFACE_REMOVED": "OBJECT_TYPE_INTERFACE_REMOVED",
        "SCHEMA_QUERY_TYPE_CHANGED": "SCHEMA_QUERY_TYPE_CHANGED",
        "SCHEMA_MUTATION_TYPE_CHANGED": "SCHEMA_MUTATION_TYPE_CHANGED",
        "SCHEMA_SUBSCRIPTION_TYPE_CHANGED": "SCHEMA_SUBSCRIPTION_TYPE_CHANGED",
        "TYPE_REMOVED": "TYPE_REMOVED",
        "TYPE_ADDED": "TYPE_ADDED",
        "TYPE_KIND_CHANGED": "TYPE_KIND_CHANGED",
        "TYPE_DESCRIPTION_CHANGED": "TYPE_DESCRIPTION_CHANGED",
        "TYPE_DESCRIPTION_REMOVED": "TYPE_DESCRIPTION_REMOVED",
        "TYPE_DESCRIPTION_ADDED": "TYPE_DESCRIPTION_ADDED",
        "UNION_MEMBER_REMOVED": "UNION_MEMBER_REMOVED",
        "UNION_MEMBER_ADDED": "UNION_MEMBER_ADDED"
      }
    },
    "subscription_protocol": {
      "name": "subscription_protocol",
      "values": {
        "ws": "ws",
        "sse": "sse",
        "sse_post": "sse_post"
      }
    },
    "target_type": {
      "name": "target_type",
      "values": {
        "federated": "federated",
        "subgraph": "subgraph",
        "graph": "graph"
      }
    }
  },
  "schemas": {},
  "_meta": {
    "schemas": {},
    "tables": {},
    "columns": {}
  }
}