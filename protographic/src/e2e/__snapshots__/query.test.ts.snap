// Bun Snapshot v1, https://goo.gl/fbAQLP

exports[`Query Transformation should correctly read GraphQL SDL into intermediate format 1`] = `
{
  "messages": [
    {
      "fields": [
        {
          "name": "id",
          "resolved": false,
          "type": {
            "list": false,
            "name": "ID",
            "required": true,
          },
        },
        {
          "name": "name",
          "resolved": false,
          "type": {
            "list": false,
            "name": "String",
            "required": true,
          },
        },
        {
          "name": "price",
          "resolved": false,
          "type": {
            "list": false,
            "name": "Float",
            "required": true,
          },
        },
      ],
      "name": "Product",
    },
  ],
  "name": "ProductService",
  "rpcs": [
    {
      "arguments": [],
      "kind": "Query",
      "name": "products",
      "type": {
        "list": true,
        "name": "Product",
        "required": true,
      },
    },
  ],
}
`;

exports[`Query Transformation should generate correct proto3 ast 1`] = `
{
  "mapping": {
    "entity_mappings": [],
    "operation_mappings": [
      {
        "kind": "Query",
        "mapped": "QueryProducts",
        "original": "products",
        "request": "QueryProductsRequest",
        "response": "QueryProductsResponse",
      },
    ],
    "service": "ProductService",
    "type_field_mappings": [
      {
        "field_mappings": [
          {
            "argument_mappings": [],
            "mapped": "QueryProducts",
            "original": "products",
          },
        ],
        "type": "Query",
      },
    ],
    "version": 1,
  },
  "proto": {
    "messages": [
      {
        "fields": [],
        "name": "QueryProductsRequest",
      },
      {
        "fields": [
          {
            "isOptional": false,
            "isRepeated": true,
            "name": "products",
            "number": 1,
            "type": "Product",
          },
        ],
        "name": "QueryProductsResponse",
      },
      {
        "fields": [
          {
            "isOptional": false,
            "isRepeated": false,
            "name": "id",
            "number": 1,
            "type": "string",
          },
          {
            "isOptional": false,
            "isRepeated": false,
            "name": "name",
            "number": 2,
            "type": "string",
          },
          {
            "isOptional": false,
            "isRepeated": false,
            "name": "price",
            "number": 3,
            "type": "float",
          },
        ],
        "name": "Product",
      },
    ],
    "package": "ProductService",
    "services": [
      {
        "name": "ProductService",
        "rpcs": [
          {
            "name": "QueryProducts",
            "requestType": "QueryProductsRequest",
            "responseType": "QueryProductsResponse",
          },
        ],
      },
    ],
    "syntax": "proto3",
  },
}
`;

exports[`Query Transformation should generate correct proto3 schema 1`] = `
"syntax = "proto3";
package ProductService;

service ProductService {
  rpc QueryProducts(QueryProductsRequest) returns (QueryProductsResponse) {}
}

message Product {
  string id = 1;
  string name = 2;
  float price = 3;
}

message QueryProductsRequest {}

message QueryProductsResponse {
  repeated Product products = 1;
}"
`;
