# Default values for studio.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: wundergraph/cosmo/studio
  registry: ghcr.io
  pullPolicy: IfNotPresent
  # -- Overrides the image tag whose default is the chart appVersion.
  version: "latest"

deploymentStrategy: {}

imagePullSecrets: []

# -- String to partially override common.names.fullname template (will maintain the release name)
nameOverride: ""

# -- String to fully override common.names.fullname template
fullnameOverride: ""

# -- Allows to set additional environment variables on the container. Useful for global application non-specific settings.
extraEnvVars: []
#extraEnvVars:
#  - name: NODE_OPTIONS
#    value: "--max-old-space-size=1536"

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

serviceAnnotations: {}

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 3000

ingress:
#  enabled: true
#  className: ""
#  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
#    - host: studio.wundergraph.local
#      paths:
#        - path: /
#          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# -- Sets the [pod disruption budget](https://kubernetes.io/docs/tasks/run-application/configure-pdb/) for Deployment pods
podDisruptionBudget: {}

# -- Set to existing PriorityClass name to control pod preemption by the scheduler
priorityClassName: ""

# -- Sets the [termination grace period](https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#hook-handler-execution) for Deployment pods
terminationGracePeriodSeconds: 5

probes:
  # -- Configure readiness probe
  readiness:
    httpGet:
      path: /
      port: http
  # -- Configure liveness probe
  liveness:
    httpGet:
      path: /
      port: http

########################
# Global configuration #
########################

configuration:
  # -- The client ID of the slack app to use for slack app integration
  slackClientId: ""
  # -- Custom scripts injected into the head of the studio, eg for analytics
  #customHeadScripts: [{"id": "hello-world", "src": "console.log('hello world')", "inline": true}]
  # -- The publishable key of the stripe account to use for stripe integration
  stripePublishableKey: ""

#global:
#  controlplane:
#    port: 3001
#    webUrl: "http://controlplane.wundergraph.local"
#  studio:
#    port: 3000
#    webUrl: "http://studio.wundergraph.local"
#    image:
#      tag: "latest"