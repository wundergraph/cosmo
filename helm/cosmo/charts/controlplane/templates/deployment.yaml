apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "controlplane.fullname" . }}
  annotations:
    # Support for k14s.io. This annotation will form a group to coordinate deployments with kapp.
    kapp.k14s.io/change-group: "cosmo.apps.controlplane.wundergraph.com/deployment"
    {{- if .Values.global.postgresql.enabled }}
    # Support for k14s.io. This annotation will wait for the postgres deployments to be ready before deploying.
    kapp.k14s.io/change-rule.postgresql: "upsert after upserting cosmo.apps.postgresql.wundergraph.com/deployment"
    {{- end }}
    {{- if .Values.global.keycloak.enabled }}
    # Support for k14s.io. This annotation will wait for the keycloak deployments to be ready before deploying.
    kapp.k14s.io/change-rule.keycloak: "upsert after upserting cosmo.apps.keycloak.wundergraph.com/deployment"
    {{- end }}
    {{- if .Values.global.redis.enabled }}
    # Support for k14s.io. This annotation will wait for the redis deployments to be ready before deploying.
    kapp.k14s.io/change-rule.redis: "upsert after upserting cosmo.apps.redis.wundergraph.com/deployment"
    {{- end }}
    # Only deploy the controlplane after the migrations have been applied.
    kapp.k14s.io/change-rule.ch-migration: "upsert after upserting cosmo.apps.controlplane.wundergraph.com/ch-migration"
    kapp.k14s.io/change-rule.db-migration: "upsert after upserting cosmo.apps.controlplane.wundergraph.com/db-migration"
  labels:
    {{- include "controlplane.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  {{- with .Values.deploymentStrategy }}
  strategy:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "controlplane.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        # Roll deployments when this config changes. Name doesn't matter, just needs to be unique.
        checksum/config: {{ include (print $.Template.BasePath "/config-map.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "controlplane.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "controlplane.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        {{- tpl (.Values.initContainers | toYaml) . | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ include "controlplane.image" . }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ include "controlplane.fullname" . }}-configmap
                  key: host
            - name: PORT
              valueFrom:
                configMapKeyRef:
                  name: {{ include "controlplane.fullname" . }}-configmap
                  key: port
            - name: LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: {{ include "controlplane.fullname" . }}-configmap
                  key: logLevel
            - name: WEB_BASE_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ include "controlplane.fullname" . }}-configmap
                  key: webBaseUrl
            - name: ALLOWED_ORIGINS
              valueFrom:
                configMapKeyRef:
                  name: {{ include "controlplane.fullname" . }}-configmap
                  key: allowedOrigins
            - name: DEBUG_SQL
              valueFrom:
                configMapKeyRef:
                  name: {{ include "controlplane.fullname" . }}-configmap
                  key: debugSQL
            - name: AUTH_REDIRECT_URI
              valueFrom:
                configMapKeyRef:
                  name: {{ include "controlplane.fullname" . }}-configmap
                  key: authRedirectUri
            - name: AUTH_JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "controlplane.fullname" . }}-secret
                  key: jwtSessionSecret
            - name: DB_URL
              valueFrom:
                secretKeyRef:
                  name: {{ include "controlplane.fullname" . }}-secret
                  key: databaseUrl
            {{- if .Values.configuration.databaseTlsCert }}
            - name: DB_TLS_CERT
              valueFrom:
                secretKeyRef:
                  name: {{ include "controlplane.fullname" . }}-secret
                  key: databaseTlsCert
            {{- end }}
            {{- if .Values.configuration.databaseTlsCa }}
            - name: DB_TLS_CA
              valueFrom:
                secretKeyRef:
                  name: {{ include "controlplane.fullname" . }}-secret
                  key: databaseTlsCa
            {{- end }}
            {{- if .Values.configuration.databaseTlsKey }}
            - name: DB_TLS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "controlplane.fullname" . }}-secret
                  key: databaseTlsKey
            {{- end }}
            - name: CLICKHOUSE_DSN
              valueFrom:
                secretKeyRef:
                  name: {{ include "controlplane.fullname" . }}-secret
                  key: clickhouseDsn
            - name: KC_REALM
              valueFrom:
                configMapKeyRef:
                  name: {{ include "controlplane.fullname" . }}-configmap
                  key: keycloakRealm
            - name: KC_LOGIN_REALM
              valueFrom:
               configMapKeyRef:
                 name: {{ include "controlplane.fullname" . }}-configmap
                 key: keycloakLoginRealm
            - name: KC_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "controlplane.fullname" . }}-secret
                  key: keycloakAdminUser
            - name: KC_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "controlplane.fullname" . }}-secret
                  key: keycloakAdminPassword
            - name: KC_API_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ include "controlplane.fullname" . }}-configmap
                  key: keycloakApiUrl
            - name: KC_FRONTEND_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ include "controlplane.fullname" . }}-configmap
                  key: keycloakFrontendUrl
            - name: KC_CLIENT_ID
              valueFrom:
                configMapKeyRef:
                  name: {{ include "controlplane.fullname" . }}-configmap
                  key: keycloakClientId
            - name: WEBHOOK_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ include "controlplane.fullname" . }}-configmap
                  key: webhookUrl
            - name: WEBHOOK_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "controlplane.fullname" . }}-secret
                  key: webhookSecret
            - name: GITHUB_APP_CLIENT_ID
              valueFrom:
                configMapKeyRef:
                  name: {{ include "controlplane.fullname" . }}-configmap
                  key: githubAppClientId
            - name: GITHUB_APP_ID
              valueFrom:
                configMapKeyRef:
                  name: {{ include "controlplane.fullname" . }}-configmap
                  key: githubAppId
            - name: GITHUB_APP_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "controlplane.fullname" . }}-secret
                  key: githubAppClientSecret
            - name: GITHUB_APP_PRIVATE_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "controlplane.fullname" . }}-secret
                  key: githubAppPrivateKey
            - name: GITHUB_APP_WEBHOOK_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "controlplane.fullname" . }}-secret
                  key: githubAppWebhookSecret
            {{- if .Values.configuration.slackAppClientId }}
            - name: SLACK_APP_CLIENT_ID
              valueFrom:
                configMapKeyRef:
                  name: {{ include "controlplane.fullname" . }}-configmap
                  key: slackAppClientId
            {{- end }}
            {{- if .Values.configuration.slackAppClientSecret }}
            - name: SLACK_APP_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "controlplane.fullname" . }}-secret
                  key: slackAppClientSecret
            {{- end }}
            {{- if .Values.configuration.s3StorageUrl }}
            - name: S3_STORAGE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ include "controlplane.fullname" . }}-secret
                  key: s3StorageUrl
            {{- end }}
            - name: SMTP_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "controlplane.fullname" . }}-secret
                  key: smtpPassword
            - name: SMTP_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ include "controlplane.fullname" . }}-secret
                  key: smtpUsername
            {{- if .Values.configuration.stripeSecretKey }}
            - name: STRIPE_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "controlplane.fullname" . }}-secret
                  key: stripeSecretKey
            {{- end }}
            {{- if .Values.configuration.stripeWebhookSecret }}
            - name: STRIPE_WEBHOOK_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "controlplane.fullname" . }}-secret
                  key: stripeWebhookSecret
            {{- end }}
            {{- if .Values.configuration.defaultBillingPlan }}
            - name: DEFAULT_PLAN
              valueFrom:
                configMapKeyRef:
                  name: {{ include "controlplane.fullname" . }}-configmap
                  key: defaultBillingPlan
            {{- end }}
            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ include "controlplane.fullname" . }}-configmap
                  key: redisHost
            - name: REDIS_PORT
              valueFrom:
                configMapKeyRef:
                  name: {{ include "controlplane.fullname" . }}-configmap
                  key: redisPort
            {{- if .Values.configuration.redisPassword }}
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "controlplane.fullname" . }}-secret
                  key: redisPassword
            {{- end }}
            {{- if .Values.configuration.redisTlsCert }}
            - name: REDIS_TLS_CERT
              valueFrom:
                secretKeyRef:
                  name: {{ include "controlplane.fullname" . }}-secret
                  key: redisTlsCert
            {{- end }}
            {{- if .Values.configuration.redisTlsCa }}
            - name: REDIS_TLS_CA
              valueFrom:
                secretKeyRef:
                  name: {{ include "controlplane.fullname" . }}-secret
                  key: redisTlsCa
            {{- end }}
            {{- if .Values.configuration.redisTlsKey }}
            - name: REDIS_TLS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "controlplane.fullname" . }}-secret
                  key: redisTlsKey
            {{- end }}
            {{- if .Values.configuration.openAiApiKey }}
            - name: OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "controlplane.fullname" . }}-secret
                  key: openAiApiKey
            {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          {{ with .Values.probes.liveness }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{ with .Values.probes.readiness }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}
      {{- if .Values.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      {{- end }}
