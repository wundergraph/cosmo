---
{{- if not .Values.existingSecret }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "controlplane.secretName" . }}
  annotations:
    # Create secrets before the release
    "helm.sh/hook": pre-install,pre-upgrade
    # Ensure secrets are created before the migrations jobs are run
    "helm.sh/hook-weight": "-10"
    # Support for k14s.io. This annotation will produce a redeployment when the secret changes.
    kapp.k14s.io/versioned: ""
  labels:
    {{- include "controlplane.labels" . | nindent 4 }}
stringData:
  databaseUrl: "{{ .Values.configuration.databaseUrl }}"
  databaseTlsCert: "{{ .Values.configuration.databaseTlsCert }}"
  databaseTlsKey: "{{ .Values.configuration.databaseTlsKey }}"
  databaseTlsCa: "{{ .Values.configuration.databaseTlsCa }}"
  clickhouseDsn: "{{ .Values.configuration.clickhouseDsn }}"
  clickhouseMigrationDsn: "{{ .Values.configuration.clickhouseMigrationDsn }}"
  jwtSessionSecret: "{{ .Values.global.controlplane.jwtSecret }}"
  keycloakAdminUser: "{{ .Values.global.keycloak.adminUser }}"
  keycloakAdminPassword: "{{ .Values.global.keycloak.adminPassword }}"
  webhookSecret: "{{ .Values.configuration.webhookSecret }}"
  githubAppClientSecret: "{{ .Values.configuration.githubAppClientSecret }}"
  githubAppPrivateKey: "{{ .Values.configuration.githubAppPrivateKey }}"
  githubAppWebhookSecret: "{{ .Values.configuration.githubAppWebhookSecret }}"
  slackAppClientSecret: "{{ .Values.configuration.slackAppClientSecret }}"
  s3StorageUrl: "{{ .Values.configuration.s3StorageUrl }}"
  stripeSecretKey: "{{ .Values.configuration.stripeSecretKey }}"
  stripeWebhookSecret: "{{ .Values.configuration.stripeWebhookSecret }}"
  redisTlsCert: "{{ .Values.configuration.redisTlsCert }}"
  redisTlsKey: "{{ .Values.configuration.redisTlsKey }}"
  redisTlsCa: "{{ .Values.configuration.redisTlsCa }}"
  redisPassword: "{{ .Values.configuration.redisPassword }}"
  openAiApiKey: "{{ .Values.configuration.openAiApiKey }}"
  cdnBaseUrl: "{{ .Values.configuration.cdnBaseUrl }}"
  admissionJwtSecret: "{{ .Values.global.controlplane.admissionJwtSecret }}"
  {{- if .Values.configuration.smtp.enabled }}
  smtpUsername: "{{ .Values.configuration.smtp.username }}"
  smtpPassword: "{{ .Values.configuration.smtp.password }}"
  {{- end }}
  {{- if .Values.configuration.s3AccessKeyId }}
  s3AccessKeyId: "{{ .Values.configuration.s3AccessKeyId }}"
  {{- end }}
  {{- if .Values.configuration.s3SecretAccessKey }}
  s3SecretAccessKey: "{{ .Values.configuration.s3SecretAccessKey }}"
  {{- end }}
{{- end }}
