name: 'CLI Build'
description: 'Build and upload CLI binary'

inputs:
  target:
    description: 'Target platform for the build (e.g., linux-x64, darwin-x64)'
    required: true
  github-sha:
    description: 'GitHub SHA for versioning'
    required: true
  working-directory:
    description: 'Working directory for the build'
    required: false
    default: '.'
  posthog-api-key:
    description: 'PostHog API Key for telemetry'
    required: false
    default: ''
  posthog-host:
    description: 'PostHog Host URL'
    required: false
    default: 'https://eu.i.posthog.com'
  do-not-track:
    description: 'Disable telemetry'
    required: false
    default: '1'

outputs:
  artifact-url:
    description: 'URL of the uploaded artifact'
    value: ${{ steps.artifact-upload-url.outputs.artifact-url }}

runs:
  using: "composite"
  steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Bun
      uses: oven-sh/setup-bun@v2

    - name: Setup Node
      uses: ./.github/actions/node

    - name: Install dependencies
      shell: bash
      run: pnpm --filter ./cli --filter ./connect --filter ./shared --filter ./composition install --frozen-lockfile
      working-directory: ${{ inputs.working-directory }}
      env:
        POSTHOG_API_KEY: ${{ inputs.posthog-api-key }}
        POSTHOG_HOST: ${{ inputs.posthog-host }}

    - name: Build
      shell: bash
      run: pnpm --filter ./cli --filter ./connect --filter ./shared --filter ./composition run build
      working-directory: ${{ inputs.working-directory }}
      env:
        POSTHOG_API_KEY: ${{ inputs.posthog-api-key }}
        POSTHOG_HOST: ${{ inputs.posthog-host }}
        DO_NOT_TRACK: ${{ inputs.do-not-track }}

    - name: 'Build wgc binary'
      shell: bash
      run: bun build --compile --minify --sourcemap --target ${{ inputs.target }} src/index.ts --outfile out/wgc-experimental-${{ inputs.github-sha }}-${{ inputs.target }}
      working-directory: ${{ inputs.working-directory }}/cli
      env:
        POSTHOG_API_KEY: ${{ inputs.posthog-api-key }}
        POSTHOG_HOST: ${{ inputs.posthog-host }}
        DO_NOT_TRACK: ${{ inputs.do-not-track }}

    - name: 'Upload builds as artifacts'
      id: upload
      uses: actions/upload-artifact@v4
      with:
        name: wgc-experimental-${{ inputs.github-sha }}-${{ inputs.target }}
        path: cli/out/wgc-experimental-${{ inputs.github-sha }}-${{ inputs.target }}*
        if-no-files-found: error

    - name: Output artifact URL
      id: artifact-upload-url
      shell: bash
      run: echo "artifact-url=${{ steps.upload.outputs.artifact-url }}" >> $GITHUB_OUTPUT 