name: Router CI
on:
  pull_request:
    branches:
      - main
    paths:
      - "router/**/*"
      - "connect/**/*"
      - ".github/workflows/router-ci.yaml"

concurrency:
  group: ${{github.workflow}}-${{github.head_ref}}
  cancel-in-progress: true

env:
  CI: true

jobs:
  build_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          # The go install / version instructions are inside the Makefile, so we need to cache the Makefile.
          key: ${{ runner.os }}-go-${{ hashFiles('Makefile') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - uses: ./.github/actions/go

      - name: Install tools
        run: make setup-build-tools

      - name: Generate code
        run: make generate-go

      - name: Check if git is not dirty after generating files
        run: git diff --no-ext-diff --exit-code

      - name: Install dependencies
        working-directory: ./router
        run: go mod download

      - name: Test
        working-directory: ./router
        run: make test

      - name: Build
        working-directory: ./router
        run: make build

  build-release-router-binaries:
    #if: inputs.name == 'router'
    name: Build and Release Router Binaries
    runs-on: ubuntu-latest

    strategy:
      matrix:
        # build and publish in parallel: linux/386, linux/amd64, linux/arm64, windows/386, windows/amd64, darwin/amd64, darwin/arm64
        goos: [linux, windows, darwin]
        goarch: ["386", amd64, arm64]
        exclude:
          - goarch: "386"
            goos: darwin
          - goarch: arm64
            goos: windows

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - uses: ./.github/actions/go

      - uses: wangyoucao577/go-release-action@v1
        name: Build and attach binaries to GitHub Release
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          project_path: "./router"
          binary_name: "router"
          build_flags: "-trimpath -a -o router cmd/router/main.go"
          overwrite: true
          extra_files: LICENSE
          #release_tag: ${{ inputs.name }}@${{ inputs.tag }}
          release_tag: router@0.14.0


