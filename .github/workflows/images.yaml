name: Build and publish Docker images

on:
  push:
    branches:
      - 'main'
    tags-ignore:
      - '**'
    paths-ignore:
      - 'docs/*/**'
      - '*.md'
      - 'helm/**'
      - 'scripts/**'
      - '.github/**'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    strategy:
      matrix:
        include:
          - container_name: controlplane
            dockerfile: controlplane/Dockerfile
            context_path: .
          - container_name: router
            dockerfile: router/Dockerfile
            context_path: .
          - container_name: studio
            dockerfile: studio/Dockerfile
            context_path: .
          - container_name: keycloak
            dockerfile: keycloak/Dockerfile
            context_path: keycloak
          - container_name: otelcollector
            dockerfile: otelcollector/Dockerfile
            context_path: otelcollector

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to Github Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.REGISTRY }}/${{ github.repository }}/${{ matrix.container_name }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha
            # set latest tag for default branch
            type=raw,value=latest,enable={{is_default_branch}}
            # use custom value instead of git tag
            type=match,pattern=[a-zA-Z-_]+@(.*),group=1

      - name: Install Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          push: true
          file: ${{ matrix.dockerfile }}
          context: ${{ matrix.context_path }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ github.repository }}/${{ matrix.container_name }}:buildcache
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ github.repository }}/${{ matrix.container_name }}:buildcache,mode=max
