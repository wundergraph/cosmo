---
name: helm-release
run-name: helm-release

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - andi/eng-5520-automate-helm-chart-releases
      - andi/helm-release-testing

permissions:
  contents: write
  pull-requests: write

env:
  CI: true
  REGISTRY: ghcr.io.github/workflows/helm-release.yaml
  RELEASE_BRANCH: andi/helm-release-testing

jobs:
  prepare-release:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: checkout
        uses: actions/checkout@v4

      - uses: googleapis/release-please-action@v4
        id: release
        with:
          # https://github.com/googleapis/release-please-action/issues/741
          config-file: release-please-config.json
          manifest-file: .release-please-manifest.json
          target-branch: ${{ env.RELEASE_BRANCH }}
          token: ${{ secrets.GITHUB_TOKEN }}
          skip-github-release: false
          skip-github-pull-request: false

      - if: ${{ steps.release.outputs.prs_created }}
        name: install-tools
        shell: bash
        run: go install github.com/norwoodj/helm-docs/cmd/helm-docs@v1.11.3

      - if: ${{ steps.release.outputs.prs_created }}
        name: Install jq
        uses: dcarbone/install-jq-action@v2.1.0

      - if: ${{ steps.release.outputs.prs_created }}
        name: smoke-tests
        shell: bash
        run: |
          type helm-docs
          jq --version

      - if: ${{ steps.release.outputs.prs_created }}
        name: update-helm-docs
        run: |
          git config --global user.email "bot@wundergraph.com"
          git config --global user.name "hardworker-bot"

          created_prs=${{ steps.release.outputs.prs }}
          elements=$(echo $created_prs | jq -c '.[]')

          for element in $elements; do
            headBranchName=$(echo $element | jq -r '.headBranchName')
            git checkout $headBranchName
            (
              cd helm
              make docs

              git add .
              git commit -m "docs: update helm chart docs"
            )
            git push origin $headBranchName
          done
          git checkout ${{ env.RELEASE_BRANCH }}

      - uses: ./.github/actions/helm-release
        if: ${{ steps.release.outputs['helm/cosmo--release_created'] }}
        with:
          working-directory: ./helm
          registry: ${{ env.REGISTRY }}
          registry-username: ${{ github.actor }}
          registry-password: ${{ secrets.GITHUB_TOKEN }}
          make-target: publish-cosmo-chart

      - uses: ./.github/actions/helm-release
        if: ${{ steps.release.outputs['helm/cosmo/charts/router--release_created'] }}
        with:
          working-directory: ./helm
          registry: ${{ env.REGISTRY }}
          registry-username: ${{ github.actor }}
          registry-password: ${{ secrets.GITHUB_TOKEN }}
          make-target: publish-router-chart
