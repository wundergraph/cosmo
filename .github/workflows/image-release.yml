name: Build and Release Image
run-name: Build and Release ${{ inputs.name }} Image v${{ inputs.tag }}
on:
  workflow_dispatch:
    inputs:
      name:
        description: 'Name of the service to release'
        required: true
        type: choice
        options:
          - keycloak
          - otelcollector
          - cdn
          - controlplane
          - studio
          - graphqlmetrics
          - router
      tag:
        description: 'Tag to release'
        required: true
        type: string

      workingDirectory:
        description: 'Working directory to use'
        type: string
        required: true

      dockerContext:
        description: 'Docker context to use'
        type: string
        default: .

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    if: github.ref_name == github.event.repository.default_branch
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker Container registry
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY }}/${{ github.repository }}/${{ inputs.name }}
          tags: |
            type=ref,event=branch
            type=sha
            # set latest tag for default branch
            type=raw,value=latest,enable={{is_default_branch}}
            # use custom value instead of git tag
            type=raw,value=${{ inputs.tag }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Github Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate Summary
        run: echo -e "# ${{ inputs.name }}\n## Tags\n\`\`\`${{ steps.meta.outputs.tags }}\n\`\`\`\n## Labels\n\`\`\`${{ steps.meta.outputs.labels }}\n\`\`\`" >> $GITHUB_STEP_SUMMARY

      - name: Set BUILD_TIME env
        run: echo BUILD_TIME=$(date -u +'%Y-%m-%dT%H:%M:%SZ') >> ${GITHUB_ENV}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          push: true
          file: ${{ inputs.workingDirectory }}/Dockerfile
          context: ${{ inputs.dockerContext }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ github.repository }}/${{ inputs.name }}:buildcache
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ github.repository }}/${{ inputs.name }}:buildcache,mode=max
          platforms: linux/amd64,linux/arm64
          outputs:
            type=image,name=target,annotation-index.org.opencontainers.image.description=${{ inputs.name }}
            type=image,name=target,annotation-index.org.opencontainers.image.source=https://github.com/wundergraph/cosmo
            type=image,name=target,annotation-index.org.opencontainers.image.licenses=Apache-2.0
          build-args: |
            VERSION=${{ inputs.tag }}
            DATE=${{ env.BUILD_TIME }}
            COMMIT=${{ github.sha }}
