// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`Router Config Builder > Build Subgraph schema > router.config.json 1`] = `
"{
  "engineConfig": {
    "defaultFlushInterval": "500",
    "datasourceConfigurations": [
      {
        "kind": "GRAPHQL",
        "rootNodes": [
          {
            "typeName": "Query",
            "fieldNames": [
              "me"
            ]
          },
          {
            "typeName": "User",
            "fieldNames": [
              "id",
              "name",
              "username"
            ]
          }
        ],
        "overrideFieldPathFromAlias": true,
        "customGraphql": {
          "fetch": {
            "url": {
              "staticVariableContent": "https://wg-federation-demo-accounts.fly.dev/graphql"
            },
            "method": "POST",
            "body": {},
            "baseUrl": {},
            "path": {}
          },
          "subscription": {
            "enabled": true,
            "url": {
              "staticVariableContent": "https://wg-federation-demo-accounts.fly.dev/graphql"
            },
            "protocol": "GRAPHQL_SUBSCRIPTION_PROTOCOL_WS"
          },
          "federation": {
            "enabled": true,
            "serviceSdl": "type Query @extends {\\n    me: User\\n}\\n\\ntype User @key(fields: \\"id\\") {\\n    id: ID!\\n    name: String\\n    username: String\\n}\\n"
          },
          "upstreamSchema": {
            "key": "ccf27b749f6f7bebfb5799e6e5d7c6a0875f32a7"
          }
        },
        "requestTimeoutSeconds": "10",
        "id": "0",
        "keys": [
          {
            "typeName": "User",
            "selectionSet": "id"
          }
        ]
      },
      {
        "kind": "GRAPHQL",
        "rootNodes": [
          {
            "typeName": "Query",
            "fieldNames": [
              "topProducts"
            ]
          },
          {
            "typeName": "Subscription",
            "fieldNames": [
              "updatedPrice"
            ]
          },
          {
            "typeName": "Mutation",
            "fieldNames": [
              "setPrice"
            ]
          },
          {
            "typeName": "Product",
            "fieldNames": [
              "upc",
              "name",
              "price",
              "weight"
            ]
          }
        ],
        "overrideFieldPathFromAlias": true,
        "customGraphql": {
          "fetch": {
            "url": {
              "staticVariableContent": "https://wg-federation-demo-products.fly.dev/graphql"
            },
            "method": "POST",
            "body": {},
            "baseUrl": {},
            "path": {}
          },
          "subscription": {
            "enabled": true,
            "url": {
              "staticVariableContent": "https://wg-federation-demo-products.fly.dev/graphql"
            },
            "protocol": "GRAPHQL_SUBSCRIPTION_PROTOCOL_WS"
          },
          "federation": {
            "enabled": true,
            "serviceSdl": "type Query @extends {\\n    topProducts(first: Int = 5, random: Boolean): [Product]\\n}\\n\\ntype Product @key(fields: \\"upc\\") {\\n    upc: String!\\n    name: String\\n    price: Int\\n    weight: Int\\n}\\n\\ntype Subscription @extends {\\n    updatedPrice: Product!\\n}\\n\\ntype Mutation @extends {\\n    setPrice(upc: String!, price: Int!): Product\\n}\\n"
          },
          "upstreamSchema": {
            "key": "59c952660686cdd53e8316d6c1b5e75230d4da60"
          }
        },
        "requestTimeoutSeconds": "10",
        "id": "1",
        "keys": [
          {
            "typeName": "Product",
            "selectionSet": "upc"
          }
        ]
      },
      {
        "kind": "GRAPHQL",
        "rootNodes": [
          {
            "typeName": "User",
            "fieldNames": [
              "reviews",
              "id"
            ]
          },
          {
            "typeName": "Product",
            "fieldNames": [
              "reviews",
              "upc"
            ]
          },
          {
            "typeName": "Review",
            "fieldNames": [
              "id",
              "body",
              "author",
              "product"
            ]
          }
        ],
        "overrideFieldPathFromAlias": true,
        "customGraphql": {
          "fetch": {
            "url": {
              "staticVariableContent": "https://wg-federation-demo-reviews.fly.dev/graphql"
            },
            "method": "POST",
            "body": {},
            "baseUrl": {},
            "path": {}
          },
          "subscription": {
            "enabled": true,
            "url": {
              "staticVariableContent": "https://wg-federation-demo-reviews.fly.dev/graphql"
            },
            "protocol": "GRAPHQL_SUBSCRIPTION_PROTOCOL_WS"
          },
          "federation": {
            "enabled": true,
            "serviceSdl": "type Review @key(fields: \\"id\\") {\\n    id: ID!\\n    body: String\\n    author: User @provides(fields: \\"username\\")\\n    product: Product\\n}\\n\\ntype User @extends @key(fields: \\"id\\") {\\n    id: ID! @external\\n    username: String @external\\n    reviews: [Review]\\n}\\n\\ntype Product @extends @key(fields: \\"upc\\") {\\n    upc: String! @external\\n    reviews: [Review]\\n}\\n"
          },
          "upstreamSchema": {
            "key": "1b9a4a72484d26b758d37d3884812af6affbc02f"
          }
        },
        "requestTimeoutSeconds": "10",
        "id": "2",
        "keys": [
          {
            "typeName": "User",
            "selectionSet": "id"
          },
          {
            "typeName": "Product",
            "selectionSet": "upc"
          },
          {
            "typeName": "Review",
            "selectionSet": "id"
          }
        ],
        "provides": [
          {
            "typeName": "Review",
            "fieldName": "author",
            "selectionSet": "username"
          }
        ]
      },
      {
        "kind": "GRAPHQL",
        "rootNodes": [
          {
            "typeName": "Product",
            "fieldNames": [
              "inStock",
              "shippingEstimate",
              "upc"
            ]
          }
        ],
        "overrideFieldPathFromAlias": true,
        "customGraphql": {
          "fetch": {
            "url": {
              "staticVariableContent": "https://wg-federation-demo-inventory.fly.dev/graphql"
            },
            "method": "POST",
            "body": {},
            "baseUrl": {},
            "path": {}
          },
          "subscription": {
            "enabled": true,
            "url": {
              "staticVariableContent": "https://wg-federation-demo-inventory.fly.dev/graphql"
            },
            "protocol": "GRAPHQL_SUBSCRIPTION_PROTOCOL_WS"
          },
          "federation": {
            "enabled": true,
            "serviceSdl": "type Product @extends @key(fields: \\"upc\\") {\\n    upc: String! @external\\n    weight: Int @external\\n    price: Int @external\\n    inStock: Boolean\\n    shippingEstimate: Int @requires(fields: \\"price weight\\")\\n}\\n"
          },
          "upstreamSchema": {
            "key": "64a29f293bb6d35526ce51e1715b8032cdfb31bf"
          }
        },
        "requestTimeoutSeconds": "10",
        "id": "3",
        "keys": [
          {
            "typeName": "Product",
            "selectionSet": "upc"
          }
        ],
        "requires": [
          {
            "typeName": "Product",
            "fieldName": "shippingEstimate",
            "selectionSet": "price weight"
          }
        ]
      }
    ],
    "graphqlSchema": "type Query {}",
    "stringStorage": {
      "ccf27b749f6f7bebfb5799e6e5d7c6a0875f32a7": "schema {\\n  query: Query\\n}\\n\\ndirective @extends on INTERFACE | OBJECT\\n\\ndirective @external on FIELD_DEFINITION | OBJECT\\n\\ndirective @key(fields: openfed__FieldSet!, resolvable: Boolean = true) repeatable on INTERFACE | OBJECT\\n\\ndirective @provides(fields: openfed__FieldSet!) on FIELD_DEFINITION\\n\\ndirective @requires(fields: openfed__FieldSet!) on FIELD_DEFINITION\\n\\ndirective @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\\n\\ntype Query {\\n  me: User\\n}\\n\\ntype User @key(fields: \\"id\\") {\\n  id: ID!\\n  name: String\\n  username: String\\n}\\n\\nscalar openfed__FieldSet",
      "59c952660686cdd53e8316d6c1b5e75230d4da60": "schema {\\n  query: Query\\n  mutation: Mutation\\n  subscription: Subscription\\n}\\n\\ndirective @extends on INTERFACE | OBJECT\\n\\ndirective @external on FIELD_DEFINITION | OBJECT\\n\\ndirective @key(fields: openfed__FieldSet!, resolvable: Boolean = true) repeatable on INTERFACE | OBJECT\\n\\ndirective @provides(fields: openfed__FieldSet!) on FIELD_DEFINITION\\n\\ndirective @requires(fields: openfed__FieldSet!) on FIELD_DEFINITION\\n\\ndirective @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\\n\\ntype Mutation {\\n  setPrice(price: Int!, upc: String!): Product\\n}\\n\\ntype Product @key(fields: \\"upc\\") {\\n  name: String\\n  price: Int\\n  upc: String!\\n  weight: Int\\n}\\n\\ntype Query {\\n  topProducts(first: Int = 5, random: Boolean): [Product]\\n}\\n\\ntype Subscription {\\n  updatedPrice: Product!\\n}\\n\\nscalar openfed__FieldSet",
      "1b9a4a72484d26b758d37d3884812af6affbc02f": "directive @extends on INTERFACE | OBJECT\\n\\ndirective @external on FIELD_DEFINITION | OBJECT\\n\\ndirective @key(fields: openfed__FieldSet!, resolvable: Boolean = true) repeatable on INTERFACE | OBJECT\\n\\ndirective @provides(fields: openfed__FieldSet!) on FIELD_DEFINITION\\n\\ndirective @requires(fields: openfed__FieldSet!) on FIELD_DEFINITION\\n\\ndirective @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\\n\\ntype Product @key(fields: \\"upc\\") {\\n  reviews: [Review]\\n  upc: String! @external\\n}\\n\\ntype Review @key(fields: \\"id\\") {\\n  author: User @provides(fields: \\"username\\")\\n  body: String\\n  id: ID!\\n  product: Product\\n}\\n\\ntype User @key(fields: \\"id\\") {\\n  id: ID! @external\\n  reviews: [Review]\\n  username: String @external\\n}\\n\\nscalar openfed__FieldSet",
      "64a29f293bb6d35526ce51e1715b8032cdfb31bf": "directive @extends on INTERFACE | OBJECT\\n\\ndirective @external on FIELD_DEFINITION | OBJECT\\n\\ndirective @key(fields: openfed__FieldSet!, resolvable: Boolean = true) repeatable on INTERFACE | OBJECT\\n\\ndirective @provides(fields: openfed__FieldSet!) on FIELD_DEFINITION\\n\\ndirective @requires(fields: openfed__FieldSet!) on FIELD_DEFINITION\\n\\ndirective @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\\n\\ntype Product @key(fields: \\"upc\\") {\\n  inStock: Boolean\\n  price: Int @external\\n  shippingEstimate: Int @requires(fields: \\"price weight\\")\\n  upc: String! @external\\n  weight: Int @external\\n}\\n\\nscalar openfed__FieldSet"
    },
    "graphqlClientSchema": "type Query {}"
  },
  "subgraphs": [
    {
      "id": "0",
      "name": "accounts",
      "routingUrl": "https://wg-federation-demo-accounts.fly.dev/graphql"
    },
    {
      "id": "1",
      "name": "products",
      "routingUrl": "https://wg-federation-demo-products.fly.dev/graphql"
    },
    {
      "id": "2",
      "name": "reviews",
      "routingUrl": "https://wg-federation-demo-reviews.fly.dev/graphql"
    },
    {
      "id": "3",
      "name": "inventory",
      "routingUrl": "https://wg-federation-demo-inventory.fly.dev/graphql"
    }
  ]
}"
`;

exports[`Router Config Builder > that the federatedClientSDL property is not propagated if it is empty > router-no-client.config.json 1`] = `
"{
  "engineConfig": {
    "defaultFlushInterval": "500",
    "datasourceConfigurations": [
      {
        "kind": "GRAPHQL",
        "rootNodes": [
          {
            "typeName": "Query",
            "fieldNames": [
              "accounts"
            ]
          },
          {
            "typeName": "Account",
            "fieldNames": [
              "id"
            ]
          }
        ],
        "overrideFieldPathFromAlias": true,
        "customGraphql": {
          "fetch": {
            "url": {
              "staticVariableContent": "https://wg-federation-demo-accounts.fly.dev/graphql"
            },
            "method": "POST",
            "body": {},
            "baseUrl": {},
            "path": {}
          },
          "subscription": {
            "enabled": true,
            "url": {
              "staticVariableContent": "https://wg-federation-demo-accounts.fly.dev/graphql"
            },
            "protocol": "GRAPHQL_SUBSCRIPTION_PROTOCOL_WS"
          },
          "federation": {
            "enabled": true,
            "serviceSdl": "type Query {\\n  accounts: [Account!]!\\n}\\n\\ntype Account @key(fields: \\"id\\") {\\n  id: Int!\\n}"
          },
          "upstreamSchema": {
            "key": "71852430be20eb0aaee86a90ab19650150647219"
          }
        },
        "requestTimeoutSeconds": "10",
        "id": "0",
        "keys": [
          {
            "typeName": "Account",
            "selectionSet": "id"
          }
        ]
      },
      {
        "kind": "GRAPHQL",
        "rootNodes": [
          {
            "typeName": "Account",
            "fieldNames": [
              "id",
              "products"
            ]
          }
        ],
        "childNodes": [
          {
            "typeName": "Product",
            "fieldNames": [
              "upc"
            ]
          }
        ],
        "overrideFieldPathFromAlias": true,
        "customGraphql": {
          "fetch": {
            "url": {
              "staticVariableContent": "https://wg-federation-demo-products.fly.dev/graphql"
            },
            "method": "POST",
            "body": {},
            "baseUrl": {},
            "path": {}
          },
          "subscription": {
            "enabled": true,
            "url": {
              "staticVariableContent": "https://wg-federation-demo-products.fly.dev/graphql"
            },
            "protocol": "GRAPHQL_SUBSCRIPTION_PROTOCOL_WS"
          },
          "federation": {
            "enabled": true,
            "serviceSdl": "type Product {\\n  upc: Int!\\n}\\n\\ntype Account @key(fields: \\"id\\") {\\n  id: Int!\\n  products: [Product]!\\n}"
          },
          "upstreamSchema": {
            "key": "7792956bbbbc1a32270a4136a1b5177d2613e20f"
          }
        },
        "requestTimeoutSeconds": "10",
        "id": "1",
        "keys": [
          {
            "typeName": "Account",
            "selectionSet": "id"
          }
        ]
      }
    ],
    "graphqlSchema": "directive @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\\n\\ntype Query {\\n  accounts: [Account!]!\\n}\\n\\ntype Account {\\n  id: Int!\\n  products: [Product]!\\n}\\n\\ntype Product {\\n  upc: Int!\\n}",
    "stringStorage": {
      "71852430be20eb0aaee86a90ab19650150647219": "schema {\\n  query: Query\\n}\\n\\ndirective @extends on INTERFACE | OBJECT\\n\\ndirective @external on FIELD_DEFINITION | OBJECT\\n\\ndirective @key(fields: openfed__FieldSet!, resolvable: Boolean = true) repeatable on INTERFACE | OBJECT\\n\\ndirective @provides(fields: openfed__FieldSet!) on FIELD_DEFINITION\\n\\ndirective @requires(fields: openfed__FieldSet!) on FIELD_DEFINITION\\n\\ndirective @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\\n\\ntype Account @key(fields: \\"id\\") {\\n  id: Int!\\n}\\n\\ntype Query {\\n  accounts: [Account!]!\\n}\\n\\nscalar openfed__FieldSet",
      "7792956bbbbc1a32270a4136a1b5177d2613e20f": "directive @extends on INTERFACE | OBJECT\\n\\ndirective @external on FIELD_DEFINITION | OBJECT\\n\\ndirective @key(fields: openfed__FieldSet!, resolvable: Boolean = true) repeatable on INTERFACE | OBJECT\\n\\ndirective @provides(fields: openfed__FieldSet!) on FIELD_DEFINITION\\n\\ndirective @requires(fields: openfed__FieldSet!) on FIELD_DEFINITION\\n\\ndirective @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\\n\\ntype Account @key(fields: \\"id\\") {\\n  id: Int!\\n  products: [Product]!\\n}\\n\\ntype Product {\\n  upc: Int!\\n}\\n\\nscalar openfed__FieldSet"
    }
  },
  "subgraphs": [
    {
      "id": "0",
      "name": "accounts",
      "routingUrl": "https://wg-federation-demo-accounts.fly.dev/graphql"
    },
    {
      "id": "1",
      "name": "products",
      "routingUrl": "https://wg-federation-demo-products.fly.dev/graphql"
    }
  ]
}"
`;

exports[`Router Config Builder > that the federatedClientSDL property is propagated if a schema uses the @inaccessible directive > router-with-inaccessible.config.json 1`] = `
"{
  "engineConfig": {
    "defaultFlushInterval": "500",
    "datasourceConfigurations": [
      {
        "kind": "GRAPHQL",
        "rootNodes": [
          {
            "typeName": "Query",
            "fieldNames": [
              "accounts"
            ]
          },
          {
            "typeName": "Account",
            "fieldNames": [
              "id"
            ]
          }
        ],
        "overrideFieldPathFromAlias": true,
        "customGraphql": {
          "fetch": {
            "url": {
              "staticVariableContent": "https://wg-federation-demo-accounts.fly.dev/graphql"
            },
            "method": "POST",
            "body": {},
            "baseUrl": {},
            "path": {}
          },
          "subscription": {
            "enabled": true,
            "url": {
              "staticVariableContent": "https://wg-federation-demo-accounts.fly.dev/graphql"
            },
            "protocol": "GRAPHQL_SUBSCRIPTION_PROTOCOL_WS"
          },
          "federation": {
            "enabled": true,
            "serviceSdl": "type Query {\\n  accounts: [Account!]!\\n}\\n\\ntype Account @key(fields: \\"id\\") {\\n  id: Int!\\n}"
          },
          "upstreamSchema": {
            "key": "71852430be20eb0aaee86a90ab19650150647219"
          }
        },
        "requestTimeoutSeconds": "10",
        "id": "0",
        "keys": [
          {
            "typeName": "Account",
            "selectionSet": "id"
          }
        ]
      },
      {
        "kind": "GRAPHQL",
        "rootNodes": [
          {
            "typeName": "Account",
            "fieldNames": [
              "id",
              "products"
            ]
          }
        ],
        "childNodes": [
          {
            "typeName": "Product",
            "fieldNames": [
              "upc"
            ]
          }
        ],
        "overrideFieldPathFromAlias": true,
        "customGraphql": {
          "fetch": {
            "url": {
              "staticVariableContent": "https://wg-federation-demo-products.fly.dev/graphql"
            },
            "method": "POST",
            "body": {},
            "baseUrl": {},
            "path": {}
          },
          "subscription": {
            "enabled": true,
            "url": {
              "staticVariableContent": "https://wg-federation-demo-products.fly.dev/graphql"
            },
            "protocol": "GRAPHQL_SUBSCRIPTION_PROTOCOL_WS"
          },
          "federation": {
            "enabled": true,
            "serviceSdl": "type Product {\\n  upc: Int!\\n}\\n\\ntype Account @key(fields: \\"id\\") {\\n  id: Int!\\n  products: [Product]! @inaccessible\\n}"
          },
          "upstreamSchema": {
            "key": "9d57919f6ad8009b991f335575994d52393069c1"
          }
        },
        "requestTimeoutSeconds": "10",
        "id": "1",
        "keys": [
          {
            "typeName": "Account",
            "selectionSet": "id"
          }
        ]
      }
    ],
    "graphqlSchema": "directive @authenticated on ENUM | FIELD_DEFINITION | INTERFACE | OBJECT | SCALAR\\n\\ndirective @inaccessible on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\\n\\ndirective @requiresScopes(scopes: [[openfed__Scope!]!]!) on ENUM | FIELD_DEFINITION | INTERFACE | OBJECT | SCALAR\\n\\ndirective @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\\n\\nscalar openfed__Scope\\n\\ntype Query {\\n  accounts: [Account!]!\\n}\\n\\ntype Account {\\n  id: Int!\\n  products: [Product]!\\n}\\n\\ntype Product {\\n  upc: Int!\\n}",
    "stringStorage": {
      "71852430be20eb0aaee86a90ab19650150647219": "schema {\\n  query: Query\\n}\\n\\ndirective @extends on INTERFACE | OBJECT\\n\\ndirective @external on FIELD_DEFINITION | OBJECT\\n\\ndirective @key(fields: openfed__FieldSet!, resolvable: Boolean = true) repeatable on INTERFACE | OBJECT\\n\\ndirective @provides(fields: openfed__FieldSet!) on FIELD_DEFINITION\\n\\ndirective @requires(fields: openfed__FieldSet!) on FIELD_DEFINITION\\n\\ndirective @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\\n\\ntype Account @key(fields: \\"id\\") {\\n  id: Int!\\n}\\n\\ntype Query {\\n  accounts: [Account!]!\\n}\\n\\nscalar openfed__FieldSet",
      "9d57919f6ad8009b991f335575994d52393069c1": "directive @authenticated on ENUM | FIELD_DEFINITION | INTERFACE | OBJECT | SCALAR\\n\\ndirective @composeDirective(name: String!) repeatable on SCHEMA\\n\\ndirective @extends on INTERFACE | OBJECT\\n\\ndirective @external on FIELD_DEFINITION | OBJECT\\n\\ndirective @inaccessible on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\\n\\ndirective @interfaceObject on OBJECT\\n\\ndirective @key(fields: openfed__FieldSet!, resolvable: Boolean = true) repeatable on INTERFACE | OBJECT\\n\\ndirective @link(as: String, for: String, import: [String], url: String!) repeatable on SCHEMA\\n\\ndirective @override(from: String!) on FIELD_DEFINITION\\n\\ndirective @provides(fields: openfed__FieldSet!) on FIELD_DEFINITION\\n\\ndirective @requires(fields: openfed__FieldSet!) on FIELD_DEFINITION\\n\\ndirective @requiresScopes(scopes: [[openfed__Scope!]!]!) on ENUM | FIELD_DEFINITION | INTERFACE | OBJECT | SCALAR\\n\\ndirective @shareable on FIELD_DEFINITION | OBJECT\\n\\ndirective @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\\n\\ntype Account @key(fields: \\"id\\") {\\n  id: Int!\\n  products: [Product]! @inaccessible\\n}\\n\\ntype Product {\\n  upc: Int!\\n}\\n\\nscalar openfed__FieldSet\\n\\nscalar openfed__Scope"
    },
    "graphqlClientSchema": "directive @authenticated on ENUM | FIELD_DEFINITION | INTERFACE | OBJECT | SCALAR\\n\\ndirective @requiresScopes(scopes: [[openfed__Scope!]!]!) on ENUM | FIELD_DEFINITION | INTERFACE | OBJECT | SCALAR\\n\\nscalar openfed__Scope\\n\\ntype Query {\\n  accounts: [Account!]!\\n}\\n\\ntype Account {\\n  id: Int!\\n}\\n\\ntype Product {\\n  upc: Int!\\n}"
  },
  "subgraphs": [
    {
      "id": "0",
      "name": "accounts",
      "routingUrl": "https://wg-federation-demo-accounts.fly.dev/graphql"
    },
    {
      "id": "1",
      "name": "products",
      "routingUrl": "https://wg-federation-demo-products.fly.dev/graphql"
    }
  ]
}"
`;

exports[`Router Config Builder > that the federatedClientSDL property is propagated if a schema uses the @tag directive > router-with-tags.config.json 1`] = `
"{
  "engineConfig": {
    "defaultFlushInterval": "500",
    "datasourceConfigurations": [
      {
        "kind": "GRAPHQL",
        "rootNodes": [
          {
            "typeName": "Query",
            "fieldNames": [
              "accounts"
            ]
          },
          {
            "typeName": "Account",
            "fieldNames": [
              "id"
            ]
          }
        ],
        "overrideFieldPathFromAlias": true,
        "customGraphql": {
          "fetch": {
            "url": {
              "staticVariableContent": "https://wg-federation-demo-accounts.fly.dev/graphql"
            },
            "method": "POST",
            "body": {},
            "baseUrl": {},
            "path": {}
          },
          "subscription": {
            "enabled": true,
            "url": {
              "staticVariableContent": "https://wg-federation-demo-accounts.fly.dev/graphql"
            },
            "protocol": "GRAPHQL_SUBSCRIPTION_PROTOCOL_WS"
          },
          "federation": {
            "enabled": true,
            "serviceSdl": "type Query {\\n  accounts: [Account!]!\\n}\\n\\ntype Account @key(fields: \\"id\\") {\\n  id: Int!\\n}"
          },
          "upstreamSchema": {
            "key": "71852430be20eb0aaee86a90ab19650150647219"
          }
        },
        "requestTimeoutSeconds": "10",
        "id": "0",
        "keys": [
          {
            "typeName": "Account",
            "selectionSet": "id"
          }
        ]
      },
      {
        "kind": "GRAPHQL",
        "rootNodes": [
          {
            "typeName": "Account",
            "fieldNames": [
              "id",
              "products"
            ]
          }
        ],
        "childNodes": [
          {
            "typeName": "Product",
            "fieldNames": [
              "upc"
            ]
          }
        ],
        "overrideFieldPathFromAlias": true,
        "customGraphql": {
          "fetch": {
            "url": {
              "staticVariableContent": "https://wg-federation-demo-products.fly.dev/graphql"
            },
            "method": "POST",
            "body": {},
            "baseUrl": {},
            "path": {}
          },
          "subscription": {
            "enabled": true,
            "url": {
              "staticVariableContent": "https://wg-federation-demo-products.fly.dev/graphql"
            },
            "protocol": "GRAPHQL_SUBSCRIPTION_PROTOCOL_WS"
          },
          "federation": {
            "enabled": true,
            "serviceSdl": "type Product {\\n  upc: Int!\\n}\\n\\ntype Account @key(fields: \\"id\\") {\\n  id: Int!\\n  products: [Product]! @tag(name: \\"test\\")\\n}"
          },
          "upstreamSchema": {
            "key": "b0d8fd1148ce938654fc21ef67d04364b633fc75"
          }
        },
        "requestTimeoutSeconds": "10",
        "id": "1",
        "keys": [
          {
            "typeName": "Account",
            "selectionSet": "id"
          }
        ]
      }
    ],
    "graphqlSchema": "directive @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\\n\\ntype Query {\\n  accounts: [Account!]!\\n}\\n\\ntype Account {\\n  id: Int!\\n  products: [Product]!\\n}\\n\\ntype Product {\\n  upc: Int!\\n}",
    "stringStorage": {
      "71852430be20eb0aaee86a90ab19650150647219": "schema {\\n  query: Query\\n}\\n\\ndirective @extends on INTERFACE | OBJECT\\n\\ndirective @external on FIELD_DEFINITION | OBJECT\\n\\ndirective @key(fields: openfed__FieldSet!, resolvable: Boolean = true) repeatable on INTERFACE | OBJECT\\n\\ndirective @provides(fields: openfed__FieldSet!) on FIELD_DEFINITION\\n\\ndirective @requires(fields: openfed__FieldSet!) on FIELD_DEFINITION\\n\\ndirective @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\\n\\ntype Account @key(fields: \\"id\\") {\\n  id: Int!\\n}\\n\\ntype Query {\\n  accounts: [Account!]!\\n}\\n\\nscalar openfed__FieldSet",
      "b0d8fd1148ce938654fc21ef67d04364b633fc75": "directive @extends on INTERFACE | OBJECT\\n\\ndirective @external on FIELD_DEFINITION | OBJECT\\n\\ndirective @key(fields: openfed__FieldSet!, resolvable: Boolean = true) repeatable on INTERFACE | OBJECT\\n\\ndirective @provides(fields: openfed__FieldSet!) on FIELD_DEFINITION\\n\\ndirective @requires(fields: openfed__FieldSet!) on FIELD_DEFINITION\\n\\ndirective @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\\n\\ntype Account @key(fields: \\"id\\") {\\n  id: Int!\\n  products: [Product]! @tag(name: \\"test\\")\\n}\\n\\ntype Product {\\n  upc: Int!\\n}\\n\\nscalar openfed__FieldSet"
    },
    "graphqlClientSchema": "type Query {\\n  accounts: [Account!]!\\n}\\n\\ntype Account {\\n  id: Int!\\n  products: [Product]!\\n}\\n\\ntype Product {\\n  upc: Int!\\n}"
  },
  "subgraphs": [
    {
      "id": "0",
      "name": "accounts",
      "routingUrl": "https://wg-federation-demo-accounts.fly.dev/graphql"
    },
    {
      "id": "1",
      "name": "products",
      "routingUrl": "https://wg-federation-demo-products.fly.dev/graphql"
    }
  ]
}"
`;
