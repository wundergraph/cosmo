{"engineConfig":{"defaultFlushInterval":"500","datasourceConfigurations":[{"kind":"GRAPHQL","rootNodes":[{"typeName":"Query","fieldNames":["employee","employees","team_mates"]},{"typeName":"Employee","fieldNames":["details","id","role"]}],"childNodes":[{"typeName":"RoleType","fieldNames":["department","title"]},{"typeName":"Identifiable","fieldNames":["id"]},{"typeName":"Engineer","fieldNames":["department","engineerType","title"]},{"typeName":"Marketer","fieldNames":["department","title"]},{"typeName":"Operator","fieldNames":["department","operatorType","title"]},{"typeName":"Details","fieldNames":["forename","location","surname"]}],"overrideFieldPathFromAlias":true,"customGraphql":{"fetch":{"url":{"staticVariableContent":"http://127.0.0.1:4001/graphql"},"method":"POST","body":{},"baseUrl":{},"path":{}},"subscription":{"enabled":true,"url":{"staticVariableContent":"http://127.0.0.1:4001/graphql"}},"federation":{"enabled":true,"serviceSdl":"type Query {\n  employee(id: Int!): Employee\n  employees: [Employee!]!\n  team_mates(team: Department!): [Employee!]!\n}\n\nenum Department {\n  ENGINEERING\n  MARKETING\n  OPERATIONS\n}\n\ninterface RoleType {\n  department: Department!\n  title: [String!]!\n}\n\nenum EngineerType {\n  FRONTEND\n  BACKEND\n  FULLSTACK\n}\n\ninterface Identifiable {\n  id: Int!\n}\n\ntype Engineer implements RoleType {\n  department: Department!\n  engineerType: EngineerType!\n  title: [String!]!\n}\n\ntype Marketer implements RoleType{\n  department: Department!\n  title: [String!]!\n}\n\nenum OperationType {\n  FINANCE\n  HUMAN_RESOURCES\n}\n\ntype Operator implements RoleType {\n  department: Department!\n  operatorType: [OperationType!]!\n  title: [String!]!\n}\n\nenum Country {\n  AMERICA\n  ENGLAND\n  GERMANY\n  INDIA\n  NETHERLANDS\n  PORTUGAL\n  SPAIN\n  UKRAINE\n}\n\ntype Details @shareable {\n  forename: String!\n  location: Country!\n  surname: String!\n}\n\ntype Employee implements Identifiable @key(fields: \"id\") {\n  details: Details! @shareable\n  id: Int!\n  role: RoleType!\n}"},"upstreamSchema":{"key":"45d415dd680337cee428f0495b30210bba6cdf83"}},"requestTimeoutSeconds":"10","id":"http://127.0.0.1:4001/graphql","keys":[{"typeName":"Employee","selectionSet":"id"}]},{"kind":"GRAPHQL","rootNodes":[{"typeName":"Employee","fieldNames":["details","id"]}],"childNodes":[{"typeName":"Animal","fieldNames":["class","gender"]},{"typeName":"Pet","fieldNames":["class","gender","name"]},{"typeName":"Alligator","fieldNames":["class","dangerous","gender","name"]},{"typeName":"Cat","fieldNames":["class","gender","name","type"]},{"typeName":"Dog","fieldNames":["breed","class","gender","name"]},{"typeName":"Mouse","fieldNames":["class","gender","name"]},{"typeName":"Pony","fieldNames":["class","gender","name"]},{"typeName":"Details","fieldNames":["forename","surname","hasChildren","maritalStatus","nationality","pets"]}],"overrideFieldPathFromAlias":true,"customGraphql":{"fetch":{"url":{"staticVariableContent":"http://127.0.0.1:4002/graphql"},"method":"POST","body":{},"baseUrl":{},"path":{}},"subscription":{"enabled":true,"url":{"staticVariableContent":"http://127.0.0.1:4002/graphql"}},"federation":{"enabled":true,"serviceSdl":"enum Class {\n  Fish\n  Mammal\n  Reptile\n}\n\nenum Gender {\n  FEMALE\n  MALE\n  UNKNOWN\n}\n\ninterface Animal {\n  class: Class!\n  gender: Gender!\n}\n\ninterface Pet implements Animal {\n  class: Class!\n  gender: Gender!\n  name: String!\n}\n\nenum CatType {\n  HOME\n  STREET\n}\n\ntype Alligator implements Pet & Animal {\n  class: Class!\n  dangerous: String!\n  gender: Gender!\n  name: String!\n}\n\ntype Cat implements Pet & Animal {\n  class: Class!\n  gender: Gender!\n  name: String!\n  type: CatType!\n}\n\nenum DogBreed {\n  GOLDEN_RETRIEVER\n  POODLE\n  ROTTWEILER\n  YORKSHIRE_TERRIER\n}\n\ntype Dog implements Pet & Animal {\n  breed: DogBreed!\n  class: Class!\n  gender: Gender!\n  name: String!\n}\n\ntype Mouse implements Pet & Animal {\n  class: Class!\n  gender: Gender!\n  name: String!\n}\n\ntype Pony implements Pet & Animal {\n  class: Class!\n  gender: Gender!\n  name: String!\n}\n\nenum MaritalStatus {\n  ENGAGED\n  MARRIED\n}\n\nenum Nationality {\n  AMERICAN\n  DUTCH\n  ENGLISH\n  GERMAN\n  INDIAN\n  SPANISH\n  UKRAINIAN\n}\n\ntype Details  {\n  forename: String! @shareable\n  surname: String! @shareable\n  hasChildren: Boolean!\n  maritalStatus: MaritalStatus\n  nationality: Nationality!\n  pets: [Pet]\n}\n\ntype Employee @key(fields: \"id\") {\n  details: Details @shareable\n  id: Int!\n}"},"upstreamSchema":{"key":"427a1cef0c06b6611482ee178fb9fa4b668cf27e"}},"requestTimeoutSeconds":"10","id":"http://127.0.0.1:4002/graphql","keys":[{"typeName":"Employee","selectionSet":"id"}]},{"kind":"GRAPHQL","rootNodes":[{"typeName":"Employee","fieldNames":["id","hobbies"]}],"childNodes":[{"typeName":"Exercise","fieldNames":["category"]},{"typeName":"Experience","fieldNames":["yearsOfExperience"]},{"typeName":"Flying","fieldNames":["planeModels","yearsOfExperience"]},{"typeName":"Gaming","fieldNames":["genres","name","yearsOfExperience"]},{"typeName":"Other","fieldNames":["name"]},{"typeName":"Programming","fieldNames":["languages"]},{"typeName":"Travelling","fieldNames":["countriesLived"]}],"overrideFieldPathFromAlias":true,"customGraphql":{"fetch":{"url":{"staticVariableContent":"http://127.0.0.1:4003/graphql"},"method":"POST","body":{},"baseUrl":{},"path":{}},"subscription":{"enabled":true,"url":{"staticVariableContent":"http://127.0.0.1:4003/graphql"}},"federation":{"enabled":true,"serviceSdl":"enum ExerciseType {\n  CALISTHENICS\n  HIKING\n  SPORT\n  STRENGTH_TRAINING\n}\n\ntype Exercise {\n  category: ExerciseType!\n}\n\ninterface Experience {\n  yearsOfExperience: Float!\n}\n\ntype Flying implements Experience {\n  planeModels: [String!]!\n  yearsOfExperience: Float!\n}\n\nenum GameGenre {\n  ADVENTURE\n  BOARD\n  FPS\n  CARD\n  RPG\n  ROGUELITE\n  SIMULATION\n  STRATEGY\n}\n\ntype Gaming implements Experience {\n  genres: [GameGenre!]!\n  name: String!\n  yearsOfExperience: Float!\n}\n\ntype Other {\n  name: String!\n}\n\nenum ProgrammingLanguage {\n  CSHARP\n  GO\n  RUST\n  TYPESCRIPT\n}\n\ntype Programming {\n  languages: [ProgrammingLanguage!]!\n}\n\nenum Country {\n  AMERICA\n  ENGLAND\n  GERMANY\n  KOREA\n  NETHERLANDS\n  INDONESIA\n  PORTUGAL\n  SERBIA\n  SPAIN\n  TAIWAN\n  THAILAND\n}\n\ntype Travelling {\n  countriesLived: [Country!]!\n}\n\nunion Hobby = Exercise | Flying | Gaming | Programming | Travelling | Other\n\ntype Employee @key(fields: \"id\") {\n  id: Int!\n  hobbies: [Hobby!]!\n}"},"upstreamSchema":{"key":"69c06d8f2a7feeff8539b3c365159cce13e3ca06"}},"requestTimeoutSeconds":"10","id":"http://127.0.0.1:4003/graphql","keys":[{"typeName":"Employee","selectionSet":"id"}]},{"kind":"GRAPHQL","rootNodes":[{"typeName":"Employee","fieldNames":["id","products"]}],"overrideFieldPathFromAlias":true,"customGraphql":{"fetch":{"url":{"staticVariableContent":"http://127.0.0.1:4004/graphql"},"method":"POST","body":{},"baseUrl":{},"path":{}},"subscription":{"enabled":true,"url":{"staticVariableContent":"http://127.0.0.1:4004/graphql"}},"federation":{"enabled":true,"serviceSdl":"enum ProductNames {\n  CLOUD\n  COSMO\n  ENGINE\n  FINANCE\n  HUMAN_RESOURCES\n  MARKETING\n  SDK\n}\n\ntype Employee @key(fields: \"id\") {\n  id: Int!\n  products: [ProductNames!]!\n}"},"upstreamSchema":{"key":"f0ac33ece40c0c8b9202a140ee3b8dbc81924242"}},"requestTimeoutSeconds":"10","id":"http://127.0.0.1:4004/graphql","keys":[{"typeName":"Employee","selectionSet":"id"}]}],"fieldConfigurations":[{"typeName":"Query","fieldName":"employee","argumentsConfiguration":[{"name":"id","sourceType":"FIELD_ARGUMENT"}]},{"typeName":"Query","fieldName":"team_mates","argumentsConfiguration":[{"name":"team","sourceType":"FIELD_ARGUMENT"}]}],"graphqlSchema":"directive @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\ndirective @inaccessible on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\ninterface RoleType {\n  department: Department!\n  title: [String!]!\n}\n\ninterface Identifiable {\n  id: Int!\n}\n\ninterface Animal {\n  class: Class!\n  gender: Gender!\n}\n\ninterface Experience {\n  yearsOfExperience: Float!\n}\n\nunion Hobby = Exercise | Flying | Gaming | Programming | Travelling | Other\n\ntype Query {\n  employee(id: Int!): Employee\n  employees: [Employee!]!\n  team_mates(team: Department!): [Employee!]!\n}\n\nenum Department {\n  ENGINEERING\n  MARKETING\n  OPERATIONS\n}\n\nenum EngineerType {\n  FRONTEND\n  BACKEND\n  FULLSTACK\n}\n\nenum OperationType {\n  FINANCE\n  HUMAN_RESOURCES\n}\n\nenum Country {\n  AMERICA\n  ENGLAND\n  GERMANY\n  INDIA\n  NETHERLANDS\n  PORTUGAL\n  SPAIN\n  UKRAINE\n  KOREA\n  INDONESIA\n  SERBIA\n  TAIWAN\n  THAILAND\n}\n\ntype Details {\n  forename: String!\n  location: Country!\n  surname: String!\n  hasChildren: Boolean!\n  maritalStatus: MaritalStatus\n  nationality: Nationality!\n  pets: [Pet]\n}\n\nenum Class {\n  Fish\n  Mammal\n  Reptile\n}\n\nenum Gender {\n  FEMALE\n  MALE\n  UNKNOWN\n}\n\nenum CatType {\n  HOME\n  STREET\n}\n\nenum DogBreed {\n  GOLDEN_RETRIEVER\n  POODLE\n  ROTTWEILER\n  YORKSHIRE_TERRIER\n}\n\nenum MaritalStatus {\n  ENGAGED\n  MARRIED\n}\n\nenum Nationality {\n  AMERICAN\n  DUTCH\n  ENGLISH\n  GERMAN\n  INDIAN\n  SPANISH\n  UKRAINIAN\n}\n\nenum ExerciseType {\n  CALISTHENICS\n  HIKING\n  SPORT\n  STRENGTH_TRAINING\n}\n\ntype Exercise {\n  category: ExerciseType!\n}\n\nenum GameGenre {\n  ADVENTURE\n  BOARD\n  FPS\n  CARD\n  RPG\n  ROGUELITE\n  SIMULATION\n  STRATEGY\n}\n\ntype Other {\n  name: String!\n}\n\nenum ProgrammingLanguage {\n  CSHARP\n  GO\n  RUST\n  TYPESCRIPT\n}\n\ntype Programming {\n  languages: [ProgrammingLanguage!]!\n}\n\ntype Travelling {\n  countriesLived: [Country!]!\n}\n\nenum ProductNames {\n  CLOUD\n  COSMO\n  ENGINE\n  FINANCE\n  HUMAN_RESOURCES\n  MARKETING\n  SDK\n}\n\ninterface Pet implements Animal {\n  class: Class!\n  gender: Gender!\n  name: String!\n}\n\ntype Engineer implements RoleType {\n  department: Department!\n  engineerType: EngineerType!\n  title: [String!]!\n}\n\ntype Marketer implements RoleType {\n  department: Department!\n  title: [String!]!\n}\n\ntype Operator implements RoleType {\n  department: Department!\n  operatorType: [OperationType!]!\n  title: [String!]!\n}\n\ntype Employee implements Identifiable {\n  details: Details\n  id: Int!\n  role: RoleType!\n  hobbies: [Hobby!]!\n  products: [ProductNames!]!\n}\n\ntype Alligator implements Pet & Animal {\n  class: Class!\n  dangerous: String!\n  gender: Gender!\n  name: String!\n}\n\ntype Cat implements Pet & Animal {\n  class: Class!\n  gender: Gender!\n  name: String!\n  type: CatType!\n}\n\ntype Dog implements Pet & Animal {\n  breed: DogBreed!\n  class: Class!\n  gender: Gender!\n  name: String!\n}\n\ntype Mouse implements Pet & Animal {\n  class: Class!\n  gender: Gender!\n  name: String!\n}\n\ntype Pony implements Pet & Animal {\n  class: Class!\n  gender: Gender!\n  name: String!\n}\n\ntype Flying implements Experience {\n  planeModels: [String!]!\n  yearsOfExperience: Float!\n}\n\ntype Gaming implements Experience {\n  genres: [GameGenre!]!\n  name: String!\n  yearsOfExperience: Float!\n}","stringStorage":{"45d415dd680337cee428f0495b30210bba6cdf83":"schema {\n  query: Query\n}\n\ndirective @composeDirective(name: String!) repeatable on SCHEMA\n\ndirective @extends on INTERFACE | OBJECT\n\ndirective @external on FIELD_DEFINITION | OBJECT\n\ndirective @inaccessible on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\ndirective @key(fields: openfed__FieldSet!, resolvable: Boolean = true) repeatable on OBJECT\n\ndirective @link(as: String, for: String, import: [String], url: String!) repeatable on SCHEMA\n\ndirective @override(from: String!) on FIELD_DEFINITION\n\ndirective @provides(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @requires(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @shareable on FIELD_DEFINITION | OBJECT\n\ndirective @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\nenum Country {\n  AMERICA\n  ENGLAND\n  GERMANY\n  INDIA\n  NETHERLANDS\n  PORTUGAL\n  SPAIN\n  UKRAINE\n}\n\nenum Department {\n  ENGINEERING\n  MARKETING\n  OPERATIONS\n}\n\ntype Details @shareable {\n  forename: String!\n  location: Country!\n  surname: String!\n}\n\ntype Employee implements Identifiable @key(fields: \"id\") {\n  details: Details! @shareable\n  id: Int!\n  role: RoleType!\n}\n\ntype Engineer implements RoleType {\n  department: Department!\n  engineerType: EngineerType!\n  title: [String!]!\n}\n\nenum EngineerType {\n  BACKEND\n  FRONTEND\n  FULLSTACK\n}\n\ninterface Identifiable {\n  id: Int!\n}\n\ntype Marketer implements RoleType {\n  department: Department!\n  title: [String!]!\n}\n\nenum OperationType {\n  FINANCE\n  HUMAN_RESOURCES\n}\n\ntype Operator implements RoleType {\n  department: Department!\n  operatorType: [OperationType!]!\n  title: [String!]!\n}\n\ntype Query {\n  employee(id: Int!): Employee\n  employees: [Employee!]!\n  team_mates(team: Department!): [Employee!]!\n}\n\ninterface RoleType {\n  department: Department!\n  title: [String!]!\n}\n\nscalar openfed__FieldSet","427a1cef0c06b6611482ee178fb9fa4b668cf27e":"directive @composeDirective(name: String!) repeatable on SCHEMA\n\ndirective @extends on INTERFACE | OBJECT\n\ndirective @external on FIELD_DEFINITION | OBJECT\n\ndirective @inaccessible on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\ndirective @key(fields: openfed__FieldSet!, resolvable: Boolean = true) repeatable on OBJECT\n\ndirective @link(as: String, for: String, import: [String], url: String!) repeatable on SCHEMA\n\ndirective @override(from: String!) on FIELD_DEFINITION\n\ndirective @provides(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @requires(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @shareable on FIELD_DEFINITION | OBJECT\n\ndirective @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\ntype Alligator implements Animal & Pet {\n  class: Class!\n  dangerous: String!\n  gender: Gender!\n  name: String!\n}\n\ninterface Animal {\n  class: Class!\n  gender: Gender!\n}\n\ntype Cat implements Animal & Pet {\n  class: Class!\n  gender: Gender!\n  name: String!\n  type: CatType!\n}\n\nenum CatType {\n  HOME\n  STREET\n}\n\nenum Class {\n  Fish\n  Mammal\n  Reptile\n}\n\ntype Details {\n  forename: String! @shareable\n  hasChildren: Boolean!\n  maritalStatus: MaritalStatus\n  nationality: Nationality!\n  pets: [Pet]\n  surname: String! @shareable\n}\n\ntype Dog implements Animal & Pet {\n  breed: DogBreed!\n  class: Class!\n  gender: Gender!\n  name: String!\n}\n\nenum DogBreed {\n  GOLDEN_RETRIEVER\n  POODLE\n  ROTTWEILER\n  YORKSHIRE_TERRIER\n}\n\ntype Employee @key(fields: \"id\") {\n  details: Details @shareable\n  id: Int!\n}\n\nenum Gender {\n  FEMALE\n  MALE\n  UNKNOWN\n}\n\nenum MaritalStatus {\n  ENGAGED\n  MARRIED\n}\n\ntype Mouse implements Animal & Pet {\n  class: Class!\n  gender: Gender!\n  name: String!\n}\n\nenum Nationality {\n  AMERICAN\n  DUTCH\n  ENGLISH\n  GERMAN\n  INDIAN\n  SPANISH\n  UKRAINIAN\n}\n\ninterface Pet implements Animal {\n  class: Class!\n  gender: Gender!\n  name: String!\n}\n\ntype Pony implements Animal & Pet {\n  class: Class!\n  gender: Gender!\n  name: String!\n}\n\nscalar openfed__FieldSet","69c06d8f2a7feeff8539b3c365159cce13e3ca06":"directive @extends on INTERFACE | OBJECT\n\ndirective @external on FIELD_DEFINITION | OBJECT\n\ndirective @key(fields: openfed__FieldSet!, resolvable: Boolean = true) repeatable on OBJECT\n\ndirective @provides(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @requires(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\nenum Country {\n  AMERICA\n  ENGLAND\n  GERMANY\n  INDONESIA\n  KOREA\n  NETHERLANDS\n  PORTUGAL\n  SERBIA\n  SPAIN\n  TAIWAN\n  THAILAND\n}\n\ntype Employee @key(fields: \"id\") {\n  hobbies: [Hobby!]!\n  id: Int!\n}\n\ntype Exercise {\n  category: ExerciseType!\n}\n\nenum ExerciseType {\n  CALISTHENICS\n  HIKING\n  SPORT\n  STRENGTH_TRAINING\n}\n\ninterface Experience {\n  yearsOfExperience: Float!\n}\n\ntype Flying implements Experience {\n  planeModels: [String!]!\n  yearsOfExperience: Float!\n}\n\nenum GameGenre {\n  ADVENTURE\n  BOARD\n  CARD\n  FPS\n  ROGUELITE\n  RPG\n  SIMULATION\n  STRATEGY\n}\n\ntype Gaming implements Experience {\n  genres: [GameGenre!]!\n  name: String!\n  yearsOfExperience: Float!\n}\n\nunion Hobby = Exercise | Flying | Gaming | Other | Programming | Travelling\n\ntype Other {\n  name: String!\n}\n\ntype Programming {\n  languages: [ProgrammingLanguage!]!\n}\n\nenum ProgrammingLanguage {\n  CSHARP\n  GO\n  RUST\n  TYPESCRIPT\n}\n\ntype Travelling {\n  countriesLived: [Country!]!\n}\n\nscalar openfed__FieldSet","f0ac33ece40c0c8b9202a140ee3b8dbc81924242":"directive @extends on INTERFACE | OBJECT\n\ndirective @external on FIELD_DEFINITION | OBJECT\n\ndirective @key(fields: openfed__FieldSet!, resolvable: Boolean = true) repeatable on OBJECT\n\ndirective @provides(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @requires(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\ntype Employee @key(fields: \"id\") {\n  id: Int!\n  products: [ProductNames!]!\n}\n\nenum ProductNames {\n  CLOUD\n  COSMO\n  ENGINE\n  FINANCE\n  HUMAN_RESOURCES\n  MARKETING\n  SDK\n}\n\nscalar openfed__FieldSet"}},"subgraphs":[{"id":"0","name":"employees","routingUrl":"http://127.0.0.1:4001/graphql"},{"id":"1","name":"family","routingUrl":"http://127.0.0.1:4002/graphql"},{"id":"2","name":"hobbies","routingUrl":"http://127.0.0.1:4003/graphql"},{"id":"3","name":"products","routingUrl":"http://127.0.0.1:4004/graphql"}]}